namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto prefabID = 0x48;
		constexpr auto globalBroadcast = 0x4c;
		constexpr auto net = 0x50;
		constexpr auto IsDestroyedk__BackingField = 0x58;
		constexpr auto _prefabName = 0x60;
		constexpr auto _prefabNameWithoutExtension = 0x68;

		constexpr auto get_JustCreated = 0x300300;
		constexpr auto set_JustCreated = 0x3004f0;
		constexpr auto ClientSpawn = 0x2fea60;
		constexpr auto ClientOnEnable = 0x2fe9e0;
		constexpr auto ClientInit = 0x2fe7f0;
		constexpr auto OnNetworkUpdate = 0x2ffdd0;
		constexpr auto PreNetworkUpdate = 0x2f4e50;
		constexpr auto PostNetworkUpdate = 0x2f4e50;
		constexpr auto ShouldDestroyWithGroup = 0x2f6b40;
		constexpr auto ShouldDestroyImmediately = 0x2f4010;
		constexpr auto NetworkDestroy = 0x2ff960;
		constexpr auto DoClientDestroy = 0x2fee30;
		constexpr auto DoNetworkDestroy = 0x2f4e50;
		constexpr auto BroadcastOnPostNetworkUpdate = 0x2fe5d0;
		constexpr auto PostProcess = 0x2fff50;
		constexpr auto GetParentEntity = 0x2ff290;
		constexpr auto HasParent = 0x2ff2a0;
		constexpr auto AddChild = 0x2fe540;
		constexpr auto OnChildAdded = 0x2f4e50;
		constexpr auto RemoveChild = 0x2fffd0;
		constexpr auto OnChildRemoved = 0x2f4e50;
		constexpr auto get_gameManager = 0x300420;
		constexpr auto get_prefabAttribute = 0x300480;
		constexpr auto get_IsDestroyed = 0x3002f0;
		constexpr auto set_IsDestroyed = 0x3004e0;
		constexpr auto get_PrefabName = 0x300310;
		constexpr auto get_ShortPrefabName = 0x300390;
		constexpr auto GetNetworkPosition = 0x2ff200;
		constexpr auto GetNetworkRotation = 0x2ff250;
		constexpr auto InvokeString = 0x2ff2b0;
		constexpr auto LookupPrefab = 0x2ff8c0;
		constexpr auto EqualNetID = 0x2ff140;
		constexpr auto ResetState = 0x300040;
		constexpr auto InitShared = 0x2f4e50;
		constexpr auto PreInitShared = 0x2f4e50;
		constexpr auto PostInitShared = 0x2f4e50;
		constexpr auto DestroyShared = 0x2f4e50;
		constexpr auto OnNetworkGroupEnter = 0x2f4e50;
		constexpr auto OnNetworkGroupLeave = 0x2f4e50;
		constexpr auto OnNetworkGroupChange = 0x2ffc90;
		constexpr auto OnNetworkSubscribersEnter = 0x2f4e50;
		constexpr auto OnNetworkSubscribersLeave = 0x2f4e50;
		constexpr auto EntityDestroy = 0x2ff050;
		constexpr auto DoEntityDestroy = 0x2feef0;
		constexpr auto SpawnShared = 0x300090;
		constexpr auto Load = 0x2ff500;
		constexpr auto get_isServer = 0x2f4010;
		constexpr auto get_isClient = 0x2f6b40;
		constexpr auto OnRpcMessage = 0x2f4010;
		constexpr auto ctor = 0x300250;
		constexpr auto cctor = 0x3001a0;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x238;
		constexpr auto __menuOption_Drink = 0x290;
		constexpr auto __menuOption_InviteToTeam = 0x2e8;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x340;
		constexpr auto __menuOption_Menu_LootPlayer = 0x398;
		constexpr auto __menuOption_Promote = 0x3f0;
		constexpr auto __menuOption_SaltWater = 0x448;
		constexpr auto currentViewMode = 0x4a0;
		constexpr auto selectedViewMode = 0x4a4;
		constexpr auto lastRevivePoint = 0x4a8;
		constexpr auto lastReviveDirection = 0x4b4;
		constexpr auto playerModel = 0x4c0;
		constexpr auto Frozen = 0x4c8;
		constexpr auto voiceRecorder = 0x4d0;
		constexpr auto voiceSpeaker = 0x4d8;
		constexpr auto input = 0x4e0;
		constexpr auto movement = 0x4e8;
		constexpr auto collision = 0x4f0;
		constexpr auto emptyState = 0x8;
		constexpr auto _lookingAt = 0x4f8;
		constexpr auto _lookingAtEntity = 0x500;
		constexpr auto _lookingAtCollider = 0x508;
		constexpr auto lookingAtPointk__BackingField = 0x510;
		constexpr auto wakeTime = 0x51c;
		constexpr auto needsClothesRebuild = 0x520;
		constexpr auto wasSleeping = 0x521;
		constexpr auto wokeUpBefore = 0x522;
		constexpr auto wasDead = 0x523;
		constexpr auto lastClothesHash = 0x524;
		constexpr auto visiblePlayerList = 0x10;
		constexpr auto craftMode = 0x18;
		constexpr auto IsWearingDiveGogglesk__BackingField = 0x528;
		constexpr auto GestureViewModel = 0x530;
		constexpr auto timeSinceUpdatedLookingAt = 0x538;
		constexpr auto nextTopologyTestTime = 0x53c;
		constexpr auto usePressTime = 0x540;
		constexpr auto useHeldTime = 0x544;
		constexpr auto lookingAtTest = 0x548;
		constexpr auto lastDeathTimeClient = 0x1c;
		constexpr auto cachedWaterDrinkingPoint = 0x550;
		constexpr auto gestureList = 0x560;
		constexpr auto gestureFinishedTime = 0x568;
		constexpr auto blockHeldInputTimer = 0x56c;
		constexpr auto currentGesture = 0x570;
		constexpr auto preGestureVm = 0x578;
		constexpr auto disabledHeldEntity = 0x580;
		constexpr auto nextGestureMenuOpenTime = 0x588;
		constexpr auto lastGestureCancel = 0x58c;
		constexpr auto client_lastHelloTime = 0x590;
		constexpr auto currentTeam = 0x598;
		constexpr auto MaxTeamSizeToast = 0x20;
		constexpr auto clientTeam = 0x5a0;
		constexpr auto lastReceivedTeamTime = 0x5a8;
		constexpr auto lastPresenceTeamId = 0x5b0;
		constexpr auto lastPresenceTeamSize = 0x5b8;
		constexpr auto playerGroupKey = 0x5c0;
		constexpr auto playerGroupSizeKey = 0x5c8;
		constexpr auto clActiveItem = 0x5d0;
		constexpr auto ClientCurrentMapNote = 0x5d8;
		constexpr auto ClientCurrentDeathNote = 0x5e0;
		constexpr auto modelState = 0x5e8;
		constexpr auto mounted = 0x5f0;
		constexpr auto nextSeatSwapTime = 0x600;
		constexpr auto cachedBuildingPrivilegeTime = 0x604;
		constexpr auto cachedBuildingPrivilege = 0x608;
		constexpr auto maxProjectileID = 0x610;
		constexpr auto lastUpdateTime = 0x614;
		constexpr auto cachedThreatLevel = 0x618;
		constexpr auto serverTickRate = 0x61c;
		constexpr auto clientTickRate = 0x620;
		constexpr auto serverTickInterval = 0x624;
		constexpr auto clientTickInterval = 0x628;
		constexpr auto lastSentTickTime = 0x62c;
		constexpr auto lastSentTick = 0x630;
		constexpr auto nextVisThink = 0x638;
		constexpr auto lastTimeSeen = 0x63c;
		constexpr auto debugPrevVisible = 0x640;
		constexpr auto fallDamageEffect = 0x648;
		constexpr auto drownEffect = 0x650;
		constexpr auto playerFlags = 0x658;
		constexpr auto eyes = 0x660;
		constexpr auto inventory = 0x668;
		constexpr auto blueprints = 0x670;
		constexpr auto metabolism = 0x678;
		constexpr auto modifiers = 0x680;
		constexpr auto playerCollider = 0x688;
		constexpr auto Belt = 0x690;
		constexpr auto playerRigidbody = 0x698;
		constexpr auto userID = 0x6a0;
		constexpr auto UserIDString = 0x6a8;
		constexpr auto gamemodeteam = 0x6b0;
		constexpr auto reputation = 0x6b4;
		constexpr auto _displayName = 0x6b8;
		constexpr auto _lastSetName = 0x6c0;
		constexpr auto playerColliderStanding = 0x6c8;
		constexpr auto playerColliderDucked = 0x6dc;
		constexpr auto playerColliderCrawling = 0x6f0;
		constexpr auto playerColliderLyingDown = 0x704;
		constexpr auto cachedProtection = 0x718;
		constexpr auto oldCameraFix = 0x28;
		constexpr auto lastHeadshotSoundTime = 0x720;
		constexpr auto nextColliderRefreshTime = 0x724;
		constexpr auto clothingBlocksAiming = 0x728;
		constexpr auto clothingMoveSpeedReduction = 0x72c;
		constexpr auto clothingWaterSpeedBonus = 0x730;
		constexpr auto clothingAccuracyBonus = 0x734;
		constexpr auto equippingBlocked = 0x738;
		constexpr auto eggVision = 0x73c;
		constexpr auto activeTelephone = 0x740;
		constexpr auto designingAIEntity = 0x748;

		constexpr auto GetMenuOptions = 0x310000;
		constexpr auto get_HasMenuOptions = 0x3261e0;
		constexpr auto OnRpcMessage = 0x316630;
		constexpr auto CanBeLooted = 0x306530;
		constexpr auto Menu_LootPlayer = 0x315ba0;
		constexpr auto Menu_LootPlayer_ShowIf = 0x315b80;
		constexpr auto RPC_OpenLootPanel = 0x31f1c0;
		constexpr auto PlayOpenSound = 0x31d540;
		constexpr auto InFirstPersonMode = 0x312380;
		constexpr auto UpdateViewMode = 0x3247d0;
		constexpr auto get_idealViewMode = 0x3268c0;
		constexpr auto get_shouldDrawBody = 0x326c40;
		constexpr auto OnViewModeChanged = 0x31d0d0;
		constexpr auto ModifyCamera = 0x315c10;
		constexpr auto Menu_AssistPlayer = 0x315b40;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x315b00;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x315870;
		constexpr auto get_lookingAt = 0x326bf0;
		constexpr auto get_lookingAtEntity = 0x326b80;
		constexpr auto get_lookingAtCollider = 0x326b30;
		constexpr auto get_lookingAtPoint = 0x326bd0;
		constexpr auto set_lookingAtPoint = 0x326e80;
		constexpr auto GetExtrapolationTime = 0x30f360;
		constexpr auto GetLocalVelocityClient = 0x30fe00;
		constexpr auto ClientInit = 0x308170;
		constexpr auto CreatePlayerModel = 0x30c7f0;
		constexpr auto CreatePlayerCollision = 0x30c600;
		constexpr auto CreatePlayerMovement = 0x30cd00;
		constexpr auto InitLocalPlayer = 0x3123b0;
		constexpr auto InitRemotePlayer = 0x312690;
		constexpr auto HasLocalControls = 0x311a30;
		constexpr auto SetNetworkPosition = 0x321c60;
		constexpr auto SetNetworkRotation = 0x321d10;
		constexpr auto DoClientDestroy = 0x30d180;
		constexpr auto PostNetworkUpdate = 0x31dd30;
		constexpr auto OnFirstWakeUp = 0x316230;
		constexpr auto get_TimeAwake = 0x326700;
		constexpr auto CL_ClothingChanged = 0x305f50;
		constexpr auto ForceRebuild = 0x30e8c0;
		constexpr auto RebuildWorldModel = 0x31f660;
		constexpr auto SetDefaultFootstepEffects = 0x3213e0;
		constexpr auto OnSignal = 0x31cbf0;
		constexpr auto FindBone = 0x30df60;
		constexpr auto GetBones = 0x30e8d0;
		constexpr auto ShouldLerp = 0x321ed0;
		constexpr auto get_VisiblePlayerList = 0x326760;
		constexpr auto ClearVisibility = 0x307cc0;
		constexpr auto RegisterForVisibility = 0x31fe30;
		constexpr auto UnregisterFromVisibility = 0x322580;
		constexpr auto FindByID_Clientside = 0x30e060;
		constexpr auto Find_Clientside = 0x30e230;
		constexpr auto GetRandomFloatBasedOnUserID = 0x3116b0;
		constexpr auto DisplayHealthInfo = 0x2f4010;
		constexpr auto ShouldDestroyWithGroup = 0x321ea0;
		constexpr auto SetInheritedVelocity = 0x3218b0;
		constexpr auto GetPerformanceReport = 0x3115a0;
		constexpr auto OnBecameRagdoll = 0x315fc0;
		constexpr auto OnVoiceData = 0x31d500;
		constexpr auto RecieveAchievement = 0x31fa00;
		constexpr auto CraftMode = 0x30c390;
		constexpr auto StartDesigningAI = 0x322120;
		constexpr auto OnDebugAIEventTriggeredStateChange = 0x315ff0;
		constexpr auto ClientOnEnable = 0x308ea0;
		constexpr auto get_IsWearingDiveGoggles = 0x3266f0;
		constexpr auto set_IsWearingDiveGoggles = 0x326d80;
		constexpr auto UpdateClothesIfNeeded = 0x3226d0;
		constexpr auto MakeVisible = 0x315580;
		constexpr auto ClientUpdate_Sleeping = 0x30a160;
		constexpr auto ClientUpdate = 0x30a4f0;
		constexpr auto RebuildClothingItems = 0x31f440;
		constexpr auto UpdateClothingItems = 0x322b70;
		constexpr auto UpdateHolsterOffsets = 0x3232a0;
		constexpr auto PostLateClientCycle = 0x31dc70;
		constexpr auto IsLocalPlayer = 0x313fe0;
		constexpr auto ClientUpdateLocalPlayer = 0x309000;
		constexpr auto UpdateTopologyStats = 0x324670;
		constexpr auto ClientTick = 0x308f50;
		constexpr auto DoMovement = 0x30d470;
		constexpr auto MountableOverrideViewAngles = 0x315d00;
		constexpr auto BlockSprint = 0x3056d0;
		constexpr auto BlockJump = 0x305630;
		constexpr auto ClientInput = 0x308660;
		constexpr auto UseAction = 0x324b30;
		constexpr auto GetInteractionEntity = 0x30f8f0;
		constexpr auto QuickUse = 0x31f020;
		constexpr auto LongUse = 0x3154c0;
		constexpr auto UseStop = 0x324e00;
		constexpr auto UpdateLookingAt = 0x323430;
		constexpr auto ResetLookingAt = 0x320170;
		constexpr auto SetLookingAt = 0x321a40;
		constexpr auto CheckLookingAtVisible = 0x3074c0;
		constexpr auto FindVehicleParentFor = 0x30e0f0;
		constexpr auto OnDied = 0x316160;
		constexpr auto OnRespawnInformation = 0x316560;
		constexpr auto OnLand = 0x316370;
		constexpr auto StartLoading = 0x3222b0;
		constexpr auto FinishLoading = 0x30e4c0;
		constexpr auto FinishedLoadingRoutine = 0x30e590;
		constexpr auto DirectionalDamage = 0x30cfe0;
		constexpr auto UnlockedBlueprint = 0x322510;
		constexpr auto CheckForRespawnInfo = 0x307450;
		constexpr auto UpdateRichPresenceState = 0x3243d0;
		constexpr auto HandleCompanionPairingResult = 0x311990;
		constexpr auto UpdateWaterDrinkingPoint = 0x324810;
		constexpr auto GetWaterDrinkingPoint = 0x311970;
		constexpr auto Drink = 0x30d700;
		constexpr auto Drink_ShowIf = 0x30d530;
		constexpr auto SaltWater = 0x2f4e50;
		constexpr auto SaltWater_ShowIf = 0x3202f0;
		constexpr auto Climb = 0x30bb60;
		constexpr auto Climb_ShowIf = 0x30b8d0;
		constexpr auto HasPlayerFlag = 0x311aa0;
		constexpr auto get_IsReceivingSnapshot = 0x3266e0;
		constexpr auto get_IsAdmin = 0x326620;
		constexpr auto get_IsDeveloper = 0x3266b0;
		constexpr auto get_IsAiming = 0x326630;
		constexpr auto get_IsFlying = 0x3266c0;
		constexpr auto get_IsConnected = 0x326640;
		constexpr auto get_InGesture = 0x326570;
		constexpr auto get_CurrentGestureBlocksMovement = 0x3260c0;
		constexpr auto get_CurrentGestureIsDance = 0x326100;
		constexpr auto get_CurrentGestureIsFullBody = 0x326140;
		constexpr auto get_InGestureCancelCooldown = 0x326540;
		constexpr auto SetGestureMenuOpen = 0x3214b0;
		constexpr auto RequestStartGesture = 0x3200c0;
		constexpr auto Client_StartGesture = 0x30b3e0;
		constexpr auto ProcessDanceAction = 0x31e400;
		constexpr auto SayingHello = 0x3204c0;
		constexpr auto ProcessGestureStart = 0x31e8f0;
		constexpr auto EndGesture = 0x30da20;
		constexpr auto EndLocalGesture = 0x30db80;
		constexpr auto EndGestureShared = 0x30d8b0;
		constexpr auto HideHeldEntity = 0x312210;
		constexpr auto CancelGesture = 0x307050;
		constexpr auto RemoteGestureCancel = 0x31ff20;
		constexpr auto CancelGestureInput = 0x306bf0;
		constexpr auto ClearGestureCooldown = 0x307b70;
		constexpr auto ConVarRequestStartGesture = 0x30c130;
		constexpr auto Client_RemoteCancelledGesture = 0x30b390;
		constexpr auto IsGestureBlocked = 0x313920;
		constexpr auto get_clientTeamLifetime = 0x3267d0;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x305d10;
		constexpr auto UpdateSteamGroup = 0x324420;
		constexpr auto ClearSteamGroup = 0x307ba0;
		constexpr auto CLIENT_ClearTeam = 0x305770;
		constexpr auto CLIENT_PendingInvite = 0x305910;
		constexpr auto InviteToTeam = 0x312700;
		constexpr auto Promote = 0x31ee90;
		constexpr auto Menu_Promote_Start = 0x2f4e50;
		constexpr auto Promote_ShowIf = 0x31eac0;
		constexpr auto LocalPlayerIsLeader = 0x314fd0;
		constexpr auto Invite_ShowIf = 0x312c50;
		constexpr auto GetHeldEntity = 0x30f450;
		constexpr auto GetHeldItem = 0x30f680;
		constexpr auto GetHeldItemID = 0x30f630;
		constexpr auto HeldEntityViewAngles = 0x311ff0;
		constexpr auto HeldEntityFrame = 0x311b80;
		constexpr auto HeldEntityInput = 0x311d50;
		constexpr auto HeldItemUse = 0x312110;
		constexpr auto HeldEntityStart = 0x311f20;
		constexpr auto HeldEntityEnd = 0x311ab0;
		constexpr auto IsHostileItem = 0x313cf0;
		constexpr auto IsItemHoldRestricted = 0x313e50;
		constexpr auto MapInfoOnEnable = 0x315630;
		constexpr auto Client_ReceiveMarkers = 0x30b050;
		constexpr auto Client_UpdateDeathMarker = 0x30b7a0;
		constexpr auto Client_AddNewDeathMarker = 0x30af10;
		constexpr auto AddPointOfInterest = 0x3048b0;
		constexpr auto ClearAllPointsOfInterest = 0x307a20;
		constexpr auto ClearAllMapMarkers = 0x3078c0;
		constexpr auto OnModelState = 0x3164d0;
		constexpr auto OnModelStateChanged = 0x316430;
		constexpr auto get_isMounted = 0x326a60;
		constexpr auto get_isMountingHidingWeapon = 0x326a80;
		constexpr auto GetMounted = 0x3110e0;
		constexpr auto GetMountedVehicle = 0x311050;
		constexpr auto MarkSwapSeat = 0x315680;
		constexpr auto SwapSeatCooldown = 0x322330;
		constexpr auto ClientUpdateMounted = 0x309de0;
		constexpr auto IsSleeping = 0x314250;
		constexpr auto IsSpectating = 0x314260;
		constexpr auto IsRelaxed = 0x314170;
		constexpr auto IsServerFalling = 0x314240;
		constexpr auto GetBuildingPrivilege = 0x30ece0;
		constexpr auto CanBuild = 0x306800;
		constexpr auto IsBuildingBlocked = 0x3136a0;
		constexpr auto IsBuildingAuthed = 0x313260;
		constexpr auto CanPlaceBuildingPrivilege = 0x306990;
		constexpr auto NewProjectileID = 0x315d90;
		constexpr auto NewProjectileSeed = 0x315da0;
		constexpr auto SendProjectileAttack = 0x321120;
		constexpr auto SendProjectileRicochet = 0x321170;
		constexpr auto SendProjectileUpdate = 0x3211c0;
		constexpr auto Load = 0x314b50;
		constexpr auto GetThreatLevel = 0x311950;
		constexpr auto EnsureUpdated = 0x30dcd0;
		constexpr auto SetHostileLength = 0x321800;
		constexpr auto SetWeaponDrawnDuration = 0x321e00;
		constexpr auto ModifyInputState = 0x2f4e50;
		constexpr auto ForcePositionToParentOffset = 0x30e600;
		constexpr auto UpdateClientTickRate = 0x322670;
		constexpr auto ForcePositionTo = 0x30e730;
		constexpr auto SendVoiceData = 0x321210;
		constexpr auto SendClientTick = 0x320a60;
		constexpr auto NotifyUnderwearChange = 0x315db0;
		constexpr auto UpdatePlayerVisibilities = 0x3240d0;
		constexpr auto TimeSinceSeen = 0x322360;
		constexpr auto SetNextVisThink = 0x321db0;
		constexpr auto WantsVisUpdate = 0x325940;
		constexpr auto IsAimingAt = 0x312e90;
		constexpr auto UpdateCullingSpheres = 0x322fd0;
		constexpr auto VisUpdateUsingCulling = 0x324f80;
		constexpr auto VisUpdateUsingRays = 0x325090;
		constexpr auto LogDebugCull = 0x315180;
		constexpr auto OnVisibilityChanged = 0x31d200;
		constexpr auto VisUpdate = 0x3254b0;
		constexpr auto VisPlayerArmed = 0x324ec0;
		constexpr auto AnyPartVisible = 0x304a40;
		constexpr auto CalcVisUpdateRate = 0x3061a0;
		constexpr auto PointSeePoint = 0x31d9a0;
		constexpr auto IsWounded = 0x314540;
		constexpr auto IsCrawling = 0x313750;
		constexpr auto IsIncapacitated = 0x313e40;
		constexpr auto ToPlayer = 0x322380;
		constexpr auto get_Connection = 0x3260b0;
		constexpr auto get_displayName = 0x326820;
		constexpr auto set_displayName = 0x326d90;
		constexpr auto IsGod = 0x313c20;
		constexpr auto GetNetworkRotation = 0x311170;
		constexpr auto CanInteract = 0x306930;
		constexpr auto StartHealth = 0x322290;
		constexpr auto StartMaxHealth = 0x31d530;
		constexpr auto MaxHealth = 0x3156c0;
		constexpr auto MaxVelocity = 0x315770;
		constexpr auto GetInheritedProjectileVelocity = 0x30f770;
		constexpr auto GetInheritedThrowVelocity = 0x30f830;
		constexpr auto GetInheritedDropVelocity = 0x30f6b0;
		constexpr auto PreInitShared = 0x31dfa0;
		constexpr auto DestroyShared = 0x30cf60;
		constexpr auto InSafeZone = 0x3123a0;
		constexpr auto LateClientCycle = 0x314550;
		constexpr auto ClientCycle = 0x307e80;
		constexpr auto GetBounds = 0x30e960;
		constexpr auto GetCenter = 0x30ed90;
		constexpr auto GetOffset = 0x311250;
		constexpr auto GetSize = 0x3117b0;
		constexpr auto GetHeight = 0x30f430;
		constexpr auto GetRadius = 0x3116a0;
		constexpr auto GetJumpHeight = 0x30fdf0;
		constexpr auto TriggerPoint = 0x322400;
		constexpr auto MaxDeployDistance = 0x3156b0;
		constexpr auto ClientUpdatePersistantData = 0x30a130;
		constexpr auto GetMinSpeed = 0x311020;
		constexpr auto GetMaxSpeed = 0x30ffd0;
		constexpr auto GetSpeed = 0x311810;
		constexpr auto OnAttacked = 0x315df0;
		constexpr auto EnablePlayerCollider = 0x30d850;
		constexpr auto DisablePlayerCollider = 0x30d120;
		constexpr auto RefreshColliderSize = 0x31fb20;
		constexpr auto SetPlayerRigidbodyState = 0x321de0;
		constexpr auto AddPlayerRigidbody = 0x304730;
		constexpr auto RemovePlayerRigidbody = 0x31ff90;
		constexpr auto IsEnsnared = 0x313830;
		constexpr auto IsAttacking = 0x313060;
		constexpr auto CanAttack = 0x3062e0;
		constexpr auto OnLadder = 0x3162e0;
		constexpr auto IsSwimming = 0x3144f0;
		constexpr auto IsHeadUnderwater = 0x313ca0;
		constexpr auto IsOnGround = 0x3140c0;
		constexpr auto IsRunning = 0x314180;
		constexpr auto IsDucked = 0x313770;
		constexpr auto RecentlyTeleported = 0x31f960;
		constexpr auto ShowToast = 0x321f30;
		constexpr auto ChatMessage = 0x307260;
		constexpr auto ConsoleMessage = 0x30c2e0;
		constexpr auto PenetrationResistance = 0x31d530;
		constexpr auto ScaleDamage = 0x3207d0;
		constexpr auto UpdateMoveSpeedFromClothing = 0x323d00;
		constexpr auto UpdateProtectionFromClothing = 0x3242b0;
		constexpr auto Categorize = 0x307230;
		constexpr auto ToString = 0x322390;
		constexpr auto GetDebugStatus = 0x30f020;
		constexpr auto GetItem = 0x30fd40;
		constexpr auto get_Traits = 0x326740;
		constexpr auto WaterFactor = 0x325960;
		constexpr auto AirFactor = 0x304990;
		constexpr auto GetOxygenTime = 0x3112a0;
		constexpr auto ShouldInheritNetworkGroup = 0x314260;
		constexpr auto AnyPlayersVisibleToEntity = 0x305080;
		constexpr auto IsStandingOnEntity = 0x314270;
		constexpr auto SetActiveTelephone = 0x3213d0;
		constexpr auto get_HasActiveTelephone = 0x326180;
		constexpr auto get_IsDesigningAI = 0x326650;
		constexpr auto ClearDesigningAIEntity = 0x307b50;
		constexpr auto ctor = 0x325f70;
		constexpr auto cctor = 0x325e30;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Crawlingk__BackingField = 0x48;
		constexpr auto Groundedk__BackingField = 0x4c;
		constexpr auto lastTeleportedTime = 0x50;

		constexpr auto get_Owner = 0x2fe260;
		constexpr auto set_Owner = 0x2fe110;
		constexpr auto get_InheritedVelocity = 0x2fe200;
		constexpr auto set_InheritedVelocity = 0x2fe300;
		constexpr auto get_TargetMovement = 0x2fe2b0;
		constexpr auto set_TargetMovement = 0x2fe320;
		constexpr auto get_Running = 0x2fe2a0;
		constexpr auto set_Running = 0x2fe310;
		constexpr auto get_Ducking = 0x2fe1e0;
		constexpr auto set_Ducking = 0x2fe2e0;
		constexpr auto get_Crawling = 0x2fe1d0;
		constexpr auto set_Crawling = 0x2fe2d0;
		constexpr auto get_Grounded = 0x2fe1f0;
		constexpr auto set_Grounded = 0x2fe2f0;
		constexpr auto get_IsRunning = 0x2fe250;
		constexpr auto get_IsDucked = 0x2fe230;
		constexpr auto get_IsCrawling = 0x2fe220;
		constexpr auto get_IsGrounded = 0x2fe240;
		constexpr auto CurrentVelocity = 0x2fde40;
		constexpr auto CurrentMoveSpeed = 0x2fc2f0;
		constexpr auto GetCollider = 0x2fbec0;
		constexpr auto Init = 0x2fe110;
		constexpr auto BlockJump = 0x2f4e50;
		constexpr auto BlockSprint = 0x2f4e50;
		constexpr auto get_RecentlyTeleported = 0x2fe270;
		constexpr auto ClientInput = 0x2f4e50;
		constexpr auto DoFixedUpdate = 0x2f4e50;
		constexpr auto FrameUpdate = 0x2fdfc0;
		constexpr auto TeleportTo = 0x2fe120;
		constexpr auto Push = 0x2f4e50;
		constexpr auto SetParent = 0x2f4e50;
		constexpr auto FixedUpdate = 0x2fdeb0;
		constexpr auto PlayerAttemptedMount = 0x2f4e50;
		constexpr auto PlayerCompletedMount = 0x2f4e50;
		constexpr auto ctor = 0x2fe1c0;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x278;
		constexpr auto damageScale = 0x27c;
		constexpr auto distanceScale = 0x280;
		constexpr auto projectileVelocityScale = 0x284;
		constexpr auto automatic = 0x288;
		constexpr auto usableByTurret = 0x289;
		constexpr auto turretDamageScale = 0x28c;
		constexpr auto attackFX = 0x290;
		constexpr auto silencedAttack = 0x298;
		constexpr auto muzzleBrakeAttack = 0x2a0;
		constexpr auto MuzzlePoint = 0x2a8;
		constexpr auto reloadTime = 0x2b0;
		constexpr auto canUnloadAmmo = 0x2b4;
		constexpr auto primaryMagazine = 0x2b8;
		constexpr auto fractionalReload = 0x2c0;
		constexpr auto reloadStartDuration = 0x2c4;
		constexpr auto reloadFractionDuration = 0x2c8;
		constexpr auto reloadEndDuration = 0x2cc;
		constexpr auto aimSway = 0x2d0;
		constexpr auto aimSwaySpeed = 0x2d4;
		constexpr auto recoil = 0x2d8;
		constexpr auto aimconeCurve = 0x2e0;
		constexpr auto aimCone = 0x2e8;
		constexpr auto hipAimCone = 0x2ec;
		constexpr auto aimconePenaltyPerShot = 0x2f0;
		constexpr auto aimConePenaltyMax = 0x2f4;
		constexpr auto aimconePenaltyRecoverTime = 0x2f8;
		constexpr auto aimconePenaltyRecoverDelay = 0x2fc;
		constexpr auto stancePenaltyScale = 0x300;
		constexpr auto hasADS = 0x304;
		constexpr auto noAimingWhileCycling = 0x305;
		constexpr auto manualCycle = 0x306;
		constexpr auto needsCycle = 0x307;
		constexpr auto isCycling = 0x308;
		constexpr auto aiming = 0x309;
		constexpr auto resetDuration = 0x30c;
		constexpr auto numShotsFired = 0x310;
		constexpr auto nextReloadTime = 0x314;
		constexpr auto startReloadTime = 0x318;
		constexpr auto stancePenalty = 0x31c;
		constexpr auto aimconePenalty = 0x320;
		constexpr auto isReloading = 0x324;
		constexpr auto swaySampleTime = 0x328;
		constexpr auto lastShotTime = 0x32c;
		constexpr auto reloadPressTime = 0x330;
		constexpr auto ammoTypePreReload = 0x338;
		constexpr auto fractionalReloadDesiredCount = 0x340;
		constexpr auto fractionalReloadNumAdded = 0x344;
		constexpr auto triggerReady = 0x348;
		constexpr auto nextHeightCheckTime = 0x34c;
		constexpr auto cachedUnderground = 0x350;
		constexpr auto createdProjectiles = 0x358;

		constexpr auto OnRpcMessage = 0x7f7500;
		constexpr auto GetInheritedVelocity = 0x7f4be0;
		constexpr auto GetDamageScale = 0x7f4bc0;
		constexpr auto GetDistanceScale = 0x7f4bd0;
		constexpr auto GetProjectileVelocityScale = 0x300d10;
		constexpr auto StartReloadCooldown = 0x7f8b10;
		constexpr auto ResetReloadCooldown = 0x7f7f90;
		constexpr auto HasReloadCooldown = 0x7f5ad0;
		constexpr auto GetReloadCooldown = 0x7f53d0;
		constexpr auto GetReloadIdle = 0x7f5530;
		constexpr auto OnDrawGizmos = 0x7f6d40;
		constexpr auto GetRecoil = 0x7f53c0;
		constexpr auto get_isSemiAuto = 0x7f8e70;
		constexpr auto GetAimCone = 0x7f4320;
		constexpr auto ScaleRepeatDelay = 0x7f7fa0;
		constexpr auto GetProjectileModifier = 0x7f4d80;
		constexpr auto DidAttackClientside = 0x7f2ad0;
		constexpr auto GetItemOptions = 0x7f4c30;
		constexpr auto EditViewAngles = 0x7f3920;
		constexpr auto OnFrame = 0x7f7110;
		constexpr auto ShotFired = 0x7f82d0;
		constexpr auto SimulateAimcone = 0x7f8330;
		constexpr auto CanAttack = 0x7f2600;
		constexpr auto CanAim = 0x7f25d0;
		constexpr auto OnInput = 0x7f7120;
		constexpr auto ReadyToAim = 0x7f7ee0;
		constexpr auto ReadyToFire = 0x7f7f30;
		constexpr auto AmmoTypeClicked = 0x7f24b0;
		constexpr auto AddAmmoOption = 0x7f2300;
		constexpr auto GetReloadMenu = 0x7f55b0;
		constexpr auto PredictAmmoType = 0x7f7cb0;
		constexpr auto HasMoreThanOneAmmoType = 0x7f5820;
		constexpr auto OnDeploy = 0x7f6d00;
		constexpr auto DoReload = 0x7f33a0;
		constexpr auto InsertAmmoFraction = 0x7f5b00;
		constexpr auto CancelFractionalReloading = 0x7f2620;
		constexpr auto ClientFinishFractionalReload = 0x7f26c0;
		constexpr auto ClientSingleReload = 0x7f2800;
		constexpr auto DoAttack = 0x7f2ae0;
		constexpr auto BeginCycle = 0x7f2540;
		constexpr auto LaunchProjectile = 0x7f6b10;
		constexpr auto DryFire = 0x7f3860;
		constexpr auto GetReloadDuration = 0x7f5450;
		constexpr auto GetAvailableAmmo = 0x7f49b0;
		constexpr auto IsSilenced = 0x7f5b60;
		constexpr auto FiredUnderground = 0x7f4290;
		constexpr auto OnSignal = 0x7f75f0;
		constexpr auto LaunchProjectileClientside = 0x7f5d40;
		constexpr auto CreateProjectile = 0x7f2940;
		constexpr auto UpdateAmmoDisplay = 0x7f8b60;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x2f4010;
		constexpr auto Load = 0x7f6c60;
		constexpr auto ctor = 0x7f8c10;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x58;
		constexpr auto highFrictionMaterial = 0x60;
		constexpr auto capsuleHeight = 0x68;
		constexpr auto capsuleCenter = 0x6c;
		constexpr auto capsuleHeightDucked = 0x70;
		constexpr auto capsuleCenterDucked = 0x74;
		constexpr auto capsuleHeightCrawling = 0x78;
		constexpr auto capsuleCenterCrawling = 0x7c;
		constexpr auto gravityTestRadius = 0x80;
		constexpr auto gravityMultiplier = 0x84;
		constexpr auto gravityMultiplierSwimming = 0x88;
		constexpr auto maxAngleWalking = 0x8c;
		constexpr auto maxAngleClimbing = 0x90;
		constexpr auto maxAngleSliding = 0x94;
		constexpr auto maxStepHeight = 0x98;
		constexpr auto body = 0xa0;
		constexpr auto initialColDetectionMode = 0xa8;
		constexpr auto capsule = 0xb0;
		constexpr auto ladder = 0xb8;
		constexpr auto maxVelocity = 0xc0;
		constexpr auto groundAngle = 0xc4;
		constexpr auto groundAngleNew = 0xc8;
		constexpr auto groundTime = 0xcc;
		constexpr auto jumpTime = 0xd0;
		constexpr auto landTime = 0xd4;
		constexpr auto previousPosition = 0xd8;
		constexpr auto previousVelocity = 0xe4;
		constexpr auto previousInheritedVelocity = 0xf0;
		constexpr auto groundNormal = 0xfc;
		constexpr auto groundNormalNew = 0x108;
		constexpr auto groundVelocity = 0x114;
		constexpr auto groundVelocityNew = 0x120;
		constexpr auto nextSprintTime = 0x12c;
		constexpr auto lastSprintTime = 0x130;
		constexpr auto sprintForced = 0x134;
		constexpr auto attemptedMountTime = 0x138;
		constexpr auto modify = 0x13c;
		constexpr auto grounded = 0x140;
		constexpr auto wasGrounded = 0x141;
		constexpr auto climbing = 0x142;
		constexpr auto wasClimbing = 0x143;
		constexpr auto sliding = 0x144;
		constexpr auto wasSliding = 0x145;
		constexpr auto swimming = 0x146;
		constexpr auto wasSwimming = 0x147;
		constexpr auto jumping = 0x148;
		constexpr auto wasJumping = 0x149;
		constexpr auto falling = 0x14a;
		constexpr auto wasFalling = 0x14b;
		constexpr auto flying = 0x14c;
		constexpr auto wasFlying = 0x14d;
		constexpr auto forcedDuckDelta = 0x150;

		constexpr auto Awake = 0xbbcf70;
		constexpr auto GetCollider = 0x7a5680;
		constexpr auto OnDisable = 0xbc1f40;
		constexpr auto Init = 0xbbf710;
		constexpr auto OnCollisionEnter = 0xbc1d80;
		constexpr auto OnCollisionStay = 0xbc1e60;
		constexpr auto GroundCheck = 0xbbeed0;
		constexpr auto TeleportTo = 0xbc25f0;
		constexpr auto UpdateCurrentLadder = 0xbc2920;
		constexpr auto ClientInput = 0xbbd260;
		constexpr auto Movement_Water = 0xbc1160;
		constexpr auto Movement_Mounted = 0xbc0270;
		constexpr auto Movement_Ladder = 0xbbfc10;
		constexpr auto Movement_Noclip = 0xbc0380;
		constexpr auto Movement_Walking = 0xbc0910;
		constexpr auto GetHeldEntityMovementMultiplier = 0xbbee20;
		constexpr auto HandleGrounded = 0xbbf1a0;
		constexpr auto HandleRunDuckCrawl = 0xbbf320;
		constexpr auto GetForcedDuck = 0xbbed30;
		constexpr auto HandleJumping = 0xbbf1f0;
		constexpr auto CanJump = 0xbbd0e0;
		constexpr auto BlockJump = 0xbbd050;
		constexpr auto BlockSprint = 0xbbd090;
		constexpr auto SetKinematic = 0xbc23c0;
		constexpr auto ApplyForce = 0xbbcf30;
		constexpr auto CanSprint = 0xbbd1f0;
		constexpr auto Jump = 0xbbf8e0;
		constexpr auto DoFixedUpdate = 0xbbd610;
		constexpr auto DoStepUp = 0xbbde60;
		constexpr auto UpdateVelocity = 0xbc2e20;
		constexpr auto UpdateGravity = 0xbc2ad0;
		constexpr auto FrameUpdate = 0xbbe890;
		constexpr auto TransformState = 0xbc2710;
		constexpr auto SetParent = 0xbc23f0;
		constexpr auto FallVelocity = 0xbbe7e0;
		constexpr auto CurrentVelocity = 0xbbd5d0;
		constexpr auto CurrentMoveSpeed = 0xbbd580;
		constexpr auto PlayerAttemptedMount = 0xbc2360;
		constexpr auto PlayerCompletedMount = 0xbc2390;
		constexpr auto ctor = 0xbc3970;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x1a4cea0;
		constexpr auto set_color = 0x1a4d440;
		constexpr auto get_backgroundColor = 0x1a4cd50;
		constexpr auto set_backgroundColor = 0x1a4d350;
		constexpr auto get_contentColor = 0x1a4cf60;
		constexpr auto set_contentColor = 0x1a4d4f0;
		constexpr auto get_changed = 0x1a4ce30;
		constexpr auto set_changed = 0x1a4d3c0;
		constexpr auto get_enabled = 0x1a4cfe0;
		constexpr auto set_enabled = 0x1a4d560;
		constexpr auto get_usePageScrollbars = 0x1a4d2e0;
		constexpr auto get_blendMaterial = 0x1a4cdd0;
		constexpr auto get_blitMaterial = 0x1a4ce00;
		constexpr auto get_roundedRectMaterial = 0x1a4d100;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x1a4d130;
		constexpr auto GrabMouseControl = 0x1a4aea0;
		constexpr auto HasMouseControl = 0x1a4bc90;
		constexpr auto ReleaseMouseControl = 0x1a4c3a0;
		constexpr auto SetNextControlName = 0x1a4c630;
		constexpr auto InternalRepaintEditorWindow = 0x1a4bfb0;
		constexpr auto cctor = 0x1a4ca90;
		constexpr auto get_scrollTroughSide = 0x1a4d160;
		constexpr auto set_scrollTroughSide = 0x1a4d6c0;
		constexpr auto get_nextScrollStepTime = 0x1a4d0a0;
		constexpr auto set_nextScrollStepTime = 0x1a4d600;
		constexpr auto set_skin = 0x1a4d780;
		constexpr auto get_skin = 0x1a4d280;
		constexpr auto DoSetSkin = 0x1a49320;
		constexpr auto get_matrix = 0x1a4d010;
		constexpr auto set_matrix = 0x1a4d5a0;
		constexpr auto Label = 0x1a4c0d0;
		constexpr auto DrawTexture = 0x1a4a4b0;
		constexpr auto CalculateScaledTextureRects = 0x1a47670;
		constexpr auto Box = 0x1a46a60;
		constexpr auto Button = 0x1a46b20;
		constexpr auto PasswordFieldGetStrToShow = 0x1a4c270;
		constexpr auto DoTextField = 0x1a497a0;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x1a4b6d0;
		constexpr auto HandleTextFieldEventForDesktop = 0x1a4aee0;
		constexpr auto Toggle = 0x1a4c8d0;
		constexpr auto SelectionGrid = 0x1a4c4d0;
		constexpr auto CalcTotalHorizSpacing = 0x1a47460;
		constexpr auto DoControl = 0x1a48c50;
		constexpr auto DoLabel = 0x1a49090;
		constexpr auto DoToggle = 0x1a49960;
		constexpr auto DoButton = 0x1a48b20;
		constexpr auto DoButtonGrid = 0x1a47e30;
		constexpr auto CalcMouseRects = 0x1a46f40;
		constexpr auto HorizontalSlider = 0x1a4bda0;
		constexpr auto Slider = 0x1a4c670;
		constexpr auto BeginGroup = 0x1a46440;
		constexpr auto EndGroup = 0x1a4ae60;
		constexpr auto get_scrollViewStates = 0x1a4d220;
		constexpr auto CallWindowDelegate = 0x1a479a0;
		constexpr auto get_color_Injected = 0x1a4ce60;
		constexpr auto set_color_Injected = 0x1a4d400;
		constexpr auto get_backgroundColor_Injected = 0x1a4cd10;
		constexpr auto set_backgroundColor_Injected = 0x1a4d310;
		constexpr auto get_contentColor_Injected = 0x1a4cf20;
		constexpr auto set_contentColor_Injected = 0x1a4d4b0;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x1a43fa0;
		constexpr auto set_rawName = 0x1a44370;
		constexpr auto get_font = 0x1a43a90;
		constexpr auto get_imagePosition = 0x1a43ad0;
		constexpr auto set_alignment = 0x1a44210;
		constexpr auto get_wordWrap = 0x1a44060;
		constexpr auto get_contentOffset = 0x1a439c0;
		constexpr auto set_contentOffset = 0x1a442a0;
		constexpr auto get_fixedWidth = 0x1a43a50;
		constexpr auto get_fixedHeight = 0x1a43a10;
		constexpr auto get_stretchWidth = 0x1a44020;
		constexpr auto set_stretchWidth = 0x1a44410;
		constexpr auto get_stretchHeight = 0x1a43fe0;
		constexpr auto set_stretchHeight = 0x1a443c0;
		constexpr auto set_fontSize = 0x1a442e0;
		constexpr auto set_Internal_clipOffset = 0x1a441d0;
		constexpr auto Internal_Create = 0x1a42dd0;
		constexpr auto Internal_Copy = 0x1a42d80;
		constexpr auto Internal_Destroy = 0x1a42e10;
		constexpr auto GetStyleStatePtr = 0x1a42bb0;
		constexpr auto GetRectOffsetPtr = 0x1a42b70;
		constexpr auto Internal_GetLineHeight = 0x1a434a0;
		constexpr auto Internal_Draw = 0x1a43220;
		constexpr auto Internal_Draw2 = 0x1a42ec0;
		constexpr auto Internal_DrawCursor = 0x1a42fa0;
		constexpr auto Internal_DrawWithTextSelection = 0x1a430c0;
		constexpr auto Internal_GetCursorPixelPosition = 0x1a43350;
		constexpr auto Internal_GetCursorStringIndex = 0x1a43440;
		constexpr auto Internal_GetSelectedRenderedText = 0x1a43550;
		constexpr auto Internal_CalcSize = 0x1a41ac0;
		constexpr auto Internal_CalcSizeWithConstraints = 0x1a41a60;
		constexpr auto Internal_CalcHeight = 0x1a41980;
		constexpr auto Internal_CalcMinMaxWidth = 0x1a42c50;
		constexpr auto SetMouseTooltip = 0x1a43650;
		constexpr auto Internal_GetCursorFlashOffset = 0x1a432b0;
		constexpr auto SetDefaultFont = 0x1a435c0;
		constexpr auto ctor = 0x1a438f0;
		constexpr auto Finalize = 0x1a42990;
		constexpr auto get_name = 0x1a43d10;
		constexpr auto set_name = 0x1a44320;
		constexpr auto get_normal = 0x1a43e30;
		constexpr auto get_margin = 0x1a43c60;
		constexpr auto get_padding = 0x1a43ef0;
		constexpr auto get_lineHeight = 0x1a43bb0;
		constexpr auto Draw = 0x1a42760;
		constexpr auto DrawCursor = 0x1a41b20;
		constexpr auto DrawWithTextSelection = 0x1a41fe0;
		constexpr auto op_Implicit = 0x1a440a0;
		constexpr auto get_none = 0x1a43d70;
		constexpr auto GetCursorPixelPosition = 0x1a42a90;
		constexpr auto GetCursorStringIndex = 0x1a42b10;
		constexpr auto CalcSize = 0x1a41ac0;
		constexpr auto CalcSizeWithConstraints = 0x1a41a60;
		constexpr auto CalcHeight = 0x1a41980;
		constexpr auto get_isHeightDependantOnWidth = 0x1a43b10;
		constexpr auto CalcMinMaxWidth = 0x1a419e0;
		constexpr auto ToString = 0x1a436d0;
		constexpr auto cctor = 0x1a437e0;
		constexpr auto get_contentOffset_Injected = 0x1a43970;
		constexpr auto set_contentOffset_Injected = 0x1a44250;
		constexpr auto set_Internal_clipOffset_Injected = 0x1a44180;
		constexpr auto Internal_Draw_Injected = 0x1a43190;
		constexpr auto Internal_Draw2_Injected = 0x1a42e50;
		constexpr auto Internal_DrawCursor_Injected = 0x1a42f30;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x1a43010;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x1a432e0;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x1a433d0;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x1a434e0;
		constexpr auto Internal_CalcSize_Injected = 0x1a42d20;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x1a42cb0;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x1a42bf0;
		constexpr auto SetMouseTooltip_Injected = 0x1a43600;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x1a336c0;
		constexpr auto get_mousePosition = 0x1a335f0;
		constexpr auto set_mousePosition = 0x1a339d0;
		constexpr auto get_delta = 0x1a33370;
		constexpr auto get_pointerType = 0x1a33640;
		constexpr auto get_button = 0x1a33160;
		constexpr auto get_modifiers = 0x1a33560;
		constexpr auto set_modifiers = 0x1a33940;
		constexpr auto get_pressure = 0x1a33680;
		constexpr auto get_clickCount = 0x1a331e0;
		constexpr auto get_character = 0x1a331a0;
		constexpr auto set_character = 0x1a33780;
		constexpr auto get_keyCode = 0x1a33520;
		constexpr auto set_keyCode = 0x1a33900;
		constexpr auto get_displayIndex = 0x1a333c0;
		constexpr auto set_displayIndex = 0x1a338c0;
		constexpr auto get_type = 0x1a33740;
		constexpr auto set_type = 0x1a33a10;
		constexpr auto get_commandName = 0x1a33220;
		constexpr auto set_commandName = 0x1a337d0;
		constexpr auto Internal_Use = 0x1a31040;
		constexpr auto Internal_Create = 0x1a30e40;
		constexpr auto Internal_Destroy = 0x1a30e80;
		constexpr auto Internal_Copy = 0x1a30e00;
		constexpr auto GetTypeForControl = 0x1a30dc0;
		constexpr auto CopyFromPtr = 0x1a308a0;
		constexpr auto PopEvent = 0x1a32310;
		constexpr auto Internal_SetNativeEvent = 0x1a31000;
		constexpr auto Internal_MakeMasterEventCurrent = 0x1a30ec0;
		constexpr auto ctor = 0x1a33090;
		constexpr auto Finalize = 0x1a30bb0;
		constexpr auto CopyFrom = 0x1a308f0;
		constexpr auto get_shift = 0x1a33700;
		constexpr auto get_control = 0x1a332a0;
		constexpr auto get_alt = 0x1a33120;
		constexpr auto get_command = 0x1a33260;
		constexpr auto get_current = 0x1a332e0;
		constexpr auto set_current = 0x1a33820;
		constexpr auto get_isKey = 0x1a33470;
		constexpr auto get_isMouse = 0x1a334c0;
		constexpr auto get_isDirectManipulationDevice = 0x1a33400;
		constexpr auto KeyboardEvent = 0x1a31080;
		constexpr auto GetHashCode = 0x1a30c90;
		constexpr auto Equals = 0x1a30960;
		constexpr auto ToString = 0x1a32350;
		constexpr auto Use = 0x1a32e30;
		constexpr auto get_mousePosition_Injected = 0x1a335a0;
		constexpr auto set_mousePosition_Injected = 0x1a33980;
		constexpr auto get_delta_Injected = 0x1a33320;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x22d26a0;
		constexpr auto GetKeyUpInt = 0x22d26e0;
		constexpr auto GetKeyDownInt = 0x22d2660;
		constexpr auto GetAxis = 0x22d25e0;
		constexpr auto GetAxisRaw = 0x22d25a0;
		constexpr auto GetButtonDown = 0x22d2620;
		constexpr auto GetMouseButton = 0x22d27a0;
		constexpr auto GetMouseButtonDown = 0x22d2720;
		constexpr auto GetMouseButtonUp = 0x22d2760;
		constexpr auto GetTouch = 0x22d2820;
		constexpr auto GetKey = 0x22d26a0;
		constexpr auto GetKeyUp = 0x22d26e0;
		constexpr auto GetKeyDown = 0x22d2660;
		constexpr auto get_anyKey = 0x22d28b0;
		constexpr auto get_anyKeyDown = 0x22d2880;
		constexpr auto get_mousePosition = 0x22d2a00;
		constexpr auto get_mouseScrollDelta = 0x22d2ab0;
		constexpr auto get_imeCompositionMode = 0x22d2990;
		constexpr auto set_imeCompositionMode = 0x22d2d00;
		constexpr auto get_compositionString = 0x22d2960;
		constexpr auto get_compositionCursorPos = 0x22d2920;
		constexpr auto set_compositionCursorPos = 0x22d2cc0;
		constexpr auto get_mousePresent = 0x22d2a40;
		constexpr auto get_touchCount = 0x22d2af0;
		constexpr auto get_touchSupported = 0x22d2b20;
		constexpr auto get_touches = 0x22d2b50;
		constexpr auto GetTouch_Injected = 0x22d27e0;
		constexpr auto get_mousePosition_Injected = 0x22d29c0;
		constexpr auto get_mouseScrollDelta_Injected = 0x22d2a70;
		constexpr auto get_compositionCursorPos_Injected = 0x22d28e0;
		constexpr auto set_compositionCursorPos_Injected = 0x22d2c80;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0x589660;
		constexpr auto Capsule = 0x589280;
		constexpr auto Sphere = 0x58ab00;
		constexpr auto SphereGizmo = 0x58a810;
		constexpr auto Line = 0x589930;
		constexpr auto Arrow = 0x588350;
		constexpr auto ArrowPadded = 0x587c50;
		constexpr auto Bounds = 0x588580;
		constexpr auto Box = 0x588b40;
		constexpr auto Text = 0x58ade0;
		constexpr auto ScreenText = 0x58a670;
		constexpr auto Awake = 0x588510;
		constexpr auto OnPreRender = 0x58a290;
		constexpr auto OnPostRender = 0x589f50;
		constexpr auto OnGUI = 0x589d80;
		constexpr auto CreateLineMaterial = 0x589500;
		constexpr auto get_skin = 0x58aff0;
		constexpr auto ctor = 0x58af80;
		constexpr auto cctor = 0x2f4e50;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x19c37f0;
		constexpr auto get_whiteTexture = 0x19c3870;
		constexpr auto get_blackTexture = 0x19c37c0;
		constexpr auto Compress = 0x19c2190;
		constexpr auto Internal_CreateImpl = 0x19c27a0;
		constexpr auto Internal_Create = 0x19c2800;
		constexpr auto get_isReadable = 0x19c3830;
		constexpr auto ApplyImpl = 0x19c1fe0;
		constexpr auto ResizeImpl = 0x19c2cd0;
		constexpr auto SetPixelImpl = 0x19c3010;
		constexpr auto GetPixelImpl = 0x19c2400;
		constexpr auto GetPixelBilinearImpl = 0x19c2240;
		constexpr auto ResizeWithFormatImpl = 0x19c2d20;
		constexpr auto ReadPixelsImpl = 0x19c2ac0;
		constexpr auto SetPixelsImpl = 0x19c3210;
		constexpr auto LoadRawTextureDataImpl = 0x19c28d0;
		constexpr auto set_requestedMipmapLevel = 0x19c38e0;
		constexpr auto set_minimumMipmapLevel = 0x19c38a0;
		constexpr auto ClearRequestedMipmapLevel = 0x19c2150;
		constexpr auto ClearMinimumMipmapLevel = 0x19c2110;
		constexpr auto SetAllPixels32 = 0x19c2ef0;
		constexpr auto SetBlockOfPixels32 = 0x19c2f50;
		constexpr auto GetPixels = 0x19c26a0;
		constexpr auto GetPixels32 = 0x19c25a0;
		constexpr auto ctor = 0x19c3620;
		constexpr auto SetPixel = 0x19c3080;
		constexpr auto SetPixels = 0x19c3270;
		constexpr auto GetPixel = 0x19c2480;
		constexpr auto GetPixelBilinear = 0x19c22c0;
		constexpr auto LoadRawTextureData = 0x19c2930;
		constexpr auto Apply = 0x19c2060;
		constexpr auto Resize = 0x19c2e50;
		constexpr auto ReadPixels = 0x19c2c00;
		constexpr auto SetPixels32 = 0x19c2ef0;
		constexpr auto SetPixelImpl_Injected = 0x19c2fb0;
		constexpr auto GetPixelImpl_Injected = 0x19c23a0;
		constexpr auto GetPixelBilinearImpl_Injected = 0x19c21e0;
		constexpr auto ReadPixelsImpl_Injected = 0x19c2a50;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto ctor = 0x1e7d5f0;
		constexpr auto HasFlag = 0x1e7cad0;
		constexpr auto SetFlag = 0x1e7d580;
		constexpr auto get_ducked = 0x1e7d640;
		constexpr auto set_ducked = 0x1e7d730;
		constexpr auto get_jumped = 0x1e7d660;
		constexpr auto set_jumped = 0x1e7d770;
		constexpr auto get_onground = 0x1e7d6a0;
		constexpr auto set_onground = 0x1e7d7f0;
		constexpr auto get_sleeping = 0x1e7d6d0;
		constexpr auto set_sleeping = 0x1e7d850;
		constexpr auto get_sprinting = 0x1e7d6e0;
		constexpr auto set_sprinting = 0x1e7d870;
		constexpr auto get_onLadder = 0x1e7d680;
		constexpr auto set_onLadder = 0x1e7d7b0;
		constexpr auto get_flying = 0x1e7d650;
		constexpr auto set_flying = 0x1e7d750;
		constexpr auto get_aiming = 0x1e7d620;
		constexpr auto set_aiming = 0x1e7d6f0;
		constexpr auto get_prone = 0x1e7d6b0;
		constexpr auto set_prone = 0x1e7d810;
		constexpr auto get_mounted = 0x1e7d670;
		constexpr auto set_mounted = 0x1e7d790;
		constexpr auto get_relaxed = 0x1e7d6c0;
		constexpr auto set_relaxed = 0x1e7d830;
		constexpr auto get_crawling = 0x1e7d630;
		constexpr auto set_crawling = 0x1e7d710;
		constexpr auto get_onPhone = 0x1e7d690;
		constexpr auto set_onPhone = 0x1e7d7d0;
		constexpr auto Equal = 0x1e7c770;
		constexpr auto ResetToPool = 0x1e7cbb0;
		constexpr auto Dispose = 0x1e7c6f0;
		constexpr auto EnterPool = 0x1158180;
		constexpr auto LeavePool = 0x11581b0;
		constexpr auto CopyTo = 0x1e7b3d0;
		constexpr auto Copy = 0x1e7b420;
		constexpr auto Deserialize = 0x1e7c470;
		constexpr auto DeserializeLengthDelimited = 0x1e7b4c0;
		constexpr auto DeserializeLength = 0x1e7bb50;
		constexpr auto FromProto = 0x1e7c880;
		constexpr auto WriteToStream = 0x1e7d5b0;
		constexpr auto WriteToStreamDelta = 0x1e7d5d0;
		constexpr auto ReadFromStream = 0x1e7cae0;
		constexpr auto SerializeDelta = 0x1e7cc60;
		constexpr auto Serialize = 0x1e7d2c0;
		constexpr auto ToProtoBytes = 0x1e7d5a0;
		constexpr auto ToProto = 0x1e7d5b0;
		constexpr auto SerializeToBytes = 0x1e7d1b0;
		constexpr auto SerializeLengthDelimited = 0x1e7d100;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x1e16cd0;
		constexpr auto Dispose = 0x1e16970;
		constexpr auto EnterPool = 0x1158180;
		constexpr auto LeavePool = 0x11581b0;
		constexpr auto CopyTo = 0x1e15800;
		constexpr auto Copy = 0x1e15840;
		constexpr auto Deserialize = 0x1e15f70;
		constexpr auto DeserializeLengthDelimited = 0x1e158e0;
		constexpr auto DeserializeLength = 0x1e15ee0;
		constexpr auto FromProto = 0x1e16aa0;
		constexpr auto WriteToStream = 0x1e176e0;
		constexpr auto WriteToStreamDelta = 0x1e17700;
		constexpr auto ReadFromStream = 0x1e16cb0;
		constexpr auto SerializeDelta = 0x1e16e30;
		constexpr auto Serialize = 0x1e17440;
		constexpr auto ToProtoBytes = 0x1e176d0;
		constexpr auto ToProto = 0x1e176e0;
		constexpr auto SerializeToBytes = 0x1e17330;
		constexpr auto SerializeLengthDelimited = 0x1e17280;
		constexpr auto ctor = 0xeb22b0;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x6adae0;
		constexpr auto get_isAuthoritative = 0x6b2840;
		constexpr auto get_isAlive = 0x6b2800;
		constexpr auto Retire = 0x6b15f0;
		constexpr auto Cleanup = 0x6ae030;
		constexpr auto AdjustVelocity = 0x6ad870;
		constexpr auto InitializeVelocity = 0x6b0880;
		constexpr auto OnDisable = 0x6b0aa0;
		constexpr auto Update = 0x6b2460;
		constexpr auto SetEffectScale = 0x6b1bc0;
		constexpr auto DoFlybySound = 0x6ae230;
		constexpr auto CalculateEffectScale = 0x6adf90;
		constexpr auto UpdateVelocity = 0x6b2180;
		constexpr auto DoVelocityUpdate = 0x6b0090;
		constexpr auto DoMovement = 0x6aef50;
		constexpr auto DoWaterHit = 0x6b0470;
		constexpr auto DoRicochet = 0x6afc70;
		constexpr auto DoHit = 0x6ae840;
		constexpr auto AdditiveImpactEffect = 0x2f4e50;
		constexpr auto Reflect = 0x6b0d70;
		constexpr auto Refract = 0x6b10c0;
		constexpr auto RandomRotation = 0x6b0c70;
		constexpr auto Launch = 0x6b0a10;
		constexpr auto FleshMaterialID = 0x6b0780;
		constexpr auto WaterMaterialID = 0x6b2560;
		constexpr auto IsWaterMaterial = 0x6b08e0;
		constexpr auto ShouldStopProjectile = 0x6b20c0;
		constexpr auto ctor = 0x6b2660;
		constexpr auto cctor = 0x2f4e50;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto CrawlOffset = 0x18;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0x969640;
		constexpr auto get_worldStandingPosition = 0x969830;
		constexpr auto get_worldCrouchedPosition = 0x969540;
		constexpr auto get_worldCrawlingPosition = 0x969440;
		constexpr auto get_position = 0x968f00;
		constexpr auto get_BodyLeanOffset = 0x9685c0;
		constexpr auto get_center = 0x968920;
		constexpr auto get_offset = 0x968c40;
		constexpr auto get_rotation = 0x969390;
		constexpr auto set_rotation = 0x969990;
		constexpr auto get_bodyRotation = 0x968840;
		constexpr auto set_bodyRotation = 0x969960;
		constexpr auto get_headAngles = 0x968c20;
		constexpr auto set_headAngles = 0x969970;
		constexpr auto get_rotationLook = 0x969380;
		constexpr auto set_rotationLook = 0x969980;
		constexpr auto get_parentRotation = 0x968d70;
		constexpr auto get_canUpdateViewAngles = 0x968850;
		constexpr auto get_IsAltLookingLegsThreshold = 0x968830;
		constexpr auto set_IsAltLookingLegsThreshold = 0x969950;
		constexpr auto FrameUpdate = 0x967180;
		constexpr auto UpdateCamera = 0x968260;
		constexpr auto DoFirstPersonCamera = 0x9655f0;
		constexpr auto DoInEyeCamera = 0x9658b0;
		constexpr auto DoThirdPersonCamera = 0x965c00;
		constexpr auto ApplyCameraMoves = 0x964fc0;
		constexpr auto MovementForward = 0x967ee0;
		constexpr auto MovementRight = 0x9680a0;
		constexpr auto BodyRay = 0x9651a0;
		constexpr auto BodyForward = 0x965050;
		constexpr auto BodyRight = 0x965350;
		constexpr auto BodyUp = 0x9654a0;
		constexpr auto HeadRay = 0x967aa0;
		constexpr auto HeadForward = 0x9679b0;
		constexpr auto HeadRight = 0x967d00;
		constexpr auto HeadUp = 0x967df0;
		constexpr auto GetLookRotation = 0x967830;
		constexpr auto GetAimRotation = 0x967770;
		constexpr auto ctor = 0x968500;
		constexpr auto cctor = 0x968400;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0x92f0e0;
		constexpr auto OnDisable = 0x92f450;
		constexpr auto Holster = 0x92f3e0;
		constexpr auto Clear = 0x92ef70;
		constexpr auto OnFrame = 0x92f4c0;
		constexpr auto Play = 0x92f5a0;
		constexpr auto ResetTrigger = 0x92f6d0;
		constexpr auto Trigger = 0x92f9e0;
		constexpr auto CrossFade = 0x92f040;
		constexpr auto SetBool = 0x92f800;
		constexpr auto SetFloat = 0x92f940;
		constexpr auto set_ironSights = 0x92fb00;
		constexpr auto ctor = 0x2f6b30;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x360;
		constexpr auto arrowBack = 0x364;
		constexpr auto swapArrows = 0x368;
		constexpr auto wasAiming = 0x370;

		constexpr auto OnRpcMessage = 0x445bd0;
		constexpr auto ClientInit = 0x445330;
		constexpr auto OnSignal = 0x445cc0;
		constexpr auto UpdatePullbackThink = 0x446080;
		constexpr auto CancelPullbackThink = 0x4452c0;
		constexpr auto PullbackThink = 0x445f40;
		constexpr auto OnInput = 0x445850;
		constexpr auto OnHolstered = 0x445810;
		constexpr auto DoAttack = 0x4453a0;
		constexpr auto IsAiming = 0x445640;
		constexpr auto OnViewmodelEvent = 0x445e30;
		constexpr auto OnFrame = 0x4456e0;
		constexpr auto PostNetworkUpdate = 0x445ea0;
		constexpr auto TryReload = 0x446010;
		constexpr auto ctor = 0x2f45c0;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1f0;
		constexpr auto repeatDelay = 0x1f4;
		constexpr auto animationDelay = 0x1f8;
		constexpr auto effectiveRange = 0x1fc;
		constexpr auto npcDamageScale = 0x200;
		constexpr auto attackLengthMin = 0x204;
		constexpr auto attackLengthMax = 0x208;
		constexpr auto attackSpacing = 0x20c;
		constexpr auto aiAimSwayOffset = 0x210;
		constexpr auto aiAimCone = 0x214;
		constexpr auto aiOnlyInRange = 0x218;
		constexpr auto effectiveRangeType = 0x219;
		constexpr auto CloseRangeAddition = 0x21c;
		constexpr auto MediumRangeAddition = 0x220;
		constexpr auto LongRangeAddition = 0x224;
		constexpr auto CanUseAtMediumRange = 0x228;
		constexpr auto CanUseAtLongRange = 0x229;
		constexpr auto reloadSounds = 0x230;
		constexpr auto thirdPersonMeleeSound = 0x238;
		constexpr auto recoilCompDelayOverride = 0x240;
		constexpr auto wantsRecoilComp = 0x244;
		constexpr auto nextAttackTime = 0x248;
		constexpr auto lastTickTime = 0x24c;
		constexpr auto nextTickTime = 0x250;
		constexpr auto timeSinceDeploy = 0x254;
		constexpr auto lastRecoilCompTime = 0x258;
		constexpr auto startAimingDirection = 0x25c;
		constexpr auto wasDoingRecoilComp = 0x268;
		constexpr auto reductionSpeed = 0x26c;

		constexpr auto GetInheritedVelocity = 0x834b20;
		constexpr auto get_NextAttackTime = 0x835000;
		constexpr auto GetAttackStats = 0x2f4e50;
		constexpr auto StartAttackCooldownRaw = 0x834d40;
		constexpr auto StartAttackCooldown = 0x834d70;
		constexpr auto ResetAttackCooldown = 0x834d30;
		constexpr auto HasAttackCooldown = 0x834b90;
		constexpr auto GetAttackCooldown = 0x834a20;
		constexpr auto GetAttackIdle = 0x834aa0;
		constexpr auto CalculateCooldownTime = 0x833fd0;
		constexpr auto IsFullyDeployed = 0x834bc0;
		constexpr auto ProcessInputTime = 0x834c60;
		constexpr auto OnInput = 0x834c00;
		constexpr auto OnDeploy = 0x834be0;
		constexpr auto RecoilCompReady = 0x834cb0;
		constexpr auto AddPunch = 0x833e20;
		constexpr auto DoRecoilCompensation = 0x834110;
		constexpr auto ctor = 0x834f10;
		constexpr auto cctor = 0x834ea0;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x70;
		constexpr auto positionLerp = 0x78;
		constexpr auto menuOptions = 0x80;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x88;
		constexpr auto links = 0x90;
		constexpr auto linkedToNeighbours = 0x98;
		constexpr auto _pendingFileRequests = 0xa0;
		constexpr auto updateParentingAction = 0xa8;
		constexpr auto addedToParentEntity = 0xb0;
		constexpr auto itemSkin = 0xb8;
		constexpr auto entitySlots = 0xc0;
		constexpr auto triggers = 0xc8;
		constexpr auto isVisible = 0xd0;
		constexpr auto isAnimatorVisible = 0xd1;
		constexpr auto isShadowVisible = 0xd2;
		constexpr auto localOccludee = 0xd8;
		constexpr auto Weightk__BackingField = 0xf8;
		constexpr auto bounds = 0xfc;
		constexpr auto impactEffect = 0x118;
		constexpr auto enableSaving = 0x120;
		constexpr auto syncPosition = 0x121;
		constexpr auto model = 0x128;
		constexpr auto flags = 0x130;
		constexpr auto parentBone = 0x134;
		constexpr auto skinID = 0x138;
		constexpr auto _components = 0x140;
		constexpr auto HasBrain = 0x148;
		constexpr auto _name = 0x150;
		constexpr auto OwnerIDk__BackingField = 0x158;

		constexpr auto OnRpcMessage = 0x78b2e0;
		constexpr auto GetEntityMenu = 0x786ae0;
		constexpr auto GetMenuOptions = 0x2f4e50;
		constexpr auto get_HasMenuOptions = 0x2f4010;
		constexpr auto GetItemOptions = 0x787190;
		constexpr auto GetMovementModify = 0x787be0;
		constexpr auto GetExtrapolationTime = 0x786c20;
		constexpr auto GetInterpolationDelay = 0x786fe0;
		constexpr auto GetInterpolationInertia = 0x787070;
		constexpr auto GetInterpolationSmoothing = 0x787100;
		constexpr auto GetAngularVelocityClient = 0x786580;
		constexpr auto GetLocalVelocityClient = 0x7873e0;
		constexpr auto DrawInterpolationState = 0x784b50;
		constexpr auto LerpIdleDisable = 0x789c70;
		constexpr auto ClientInit = 0x783d60;
		constexpr auto ClientOnEnable = 0x783e10;
		constexpr auto OnPositionalFromNetwork = 0x78af80;
		constexpr auto StartLerping = 0x78e230;
		constexpr auto StopLerping = 0x78e3b0;
		constexpr auto ShouldLerp = 0x78de30;
		constexpr auto SetNetworkPosition = 0x78d920;
		constexpr auto SetNetworkRotation = 0x78da90;
		constexpr auto DoDestroyEffects = 0x784b30;
		constexpr auto SpawnGibs = 0x78df30;
		constexpr auto DoNetworkDestroy = 0x303750;
		constexpr auto PostNetworkUpdate = 0x78c5b0;
		constexpr auto OnBecameRagdoll = 0x78acc0;
		constexpr auto GetMenuInformation = 0x787560;
		constexpr auto HideMenuItems = 0x788930;
		constexpr auto GetMenuItems = 0x787840;
		constexpr auto OnUse = 0x78c3a0;
		constexpr auto OnUseHeld = 0x78c210;
		constexpr auto OnUseStopped = 0x2f4e50;
		constexpr auto OnRendered = 0x2f4e50;
		constexpr auto DoClientDestroy = 0x7847f0;
		constexpr auto GetEyeTransform = 0x786cb0;
		constexpr auto NeedsCrosshair = 0x78abb0;
		constexpr auto AlwaysShowCrosshair = 0x2f4010;
		constexpr auto ShouldDestroyWithGroup = 0x78dd80;
		constexpr auto DetachEffects = 0x7843f0;
		constexpr auto OnVoiceData = 0x2f4e50;
		constexpr auto LookingAtTick = 0x2f4e50;
		constexpr auto get_RealisticMass = 0x31d530;
		constexpr auto OnCollision = 0x78ad70;
		constexpr auto ReceiveCollisionMessages = 0x78c6a0;
		constexpr auto DebugClient = 0x2f4e50;
		constexpr auto OnDebugStart = 0x78adc0;
		constexpr auto DebugText = 0x784330;
		constexpr auto HasFlag = 0x7888f0;
		constexpr auto ParentHasFlag = 0x78c510;
		constexpr auto SetFlag = 0x78d750;
		constexpr auto IsOn = 0x782710;
		constexpr auto IsOpen = 0x788f60;
		constexpr auto IsOnFire = 0x788f50;
		constexpr auto IsLocked = 0x788ca0;
		constexpr auto IsDebugging = 0x788ab0;
		constexpr auto IsDisabled = 0x788ac0;
		constexpr auto IsBroken = 0x788aa0;
		constexpr auto IsBusy = 0x788930;
		constexpr auto GetLogColor = 0x787510;
		constexpr auto OnFlagsChanged = 0x78ae80;
		constexpr auto IsOccupied = 0x788da0;
		constexpr auto FindLink = 0x785740;
		constexpr auto EntityLinkBroadcast = 0x785300;
		constexpr auto ReceivedEntityLinkBroadcast = 0x78c730;
		constexpr auto GetEntityLinks = 0x786aa0;
		constexpr auto LinkToEntity = 0x789ca0;
		constexpr auto LinkToNeighbours = 0x789f00;
		constexpr auto InitEntityLinks = 0x788940;
		constexpr auto FreeEntityLinks = 0x7864a0;
		constexpr auto RefreshEntityLinks = 0x78c7a0;
		constexpr auto RequestFileFromServer = 0x78d020;
		constexpr auto CL_ReceiveFileRequest = 0x783a70;
		constexpr auto CompletePendingFileRequests = 0x784000;
		constexpr auto UpdateChildren = 0x78e570;
		constexpr auto UpdateParenting = 0x78f3c0;
		constexpr auto SetParentTransform = 0x78db60;
		constexpr auto UpdateDisableState = 0x78e920;
		constexpr auto HasClientTransformOffset = 0x788750;
		constexpr auto RemoveClientTransformOffset = 0x78cab0;
		constexpr auto AddClientTransformOffset = 0x783430;
		constexpr auto OnParentChangingClient = 0x2f4e50;
		constexpr auto GetBuildingPrivilege = 0x786a30;
		constexpr auto ServerRPC = 0x78d410;
		constexpr auto ServerRPCStart = 0x78d260;
		constexpr auto ServerRPCSend = 0x78d1f0;
		constexpr auto CL_RPCMessage = 0x783780;
		constexpr auto SendSignalBroadcast = 0x78d140;
		constexpr auto SignalFromServerEx = 0x78de50;
		constexpr auto SignalFromServer = 0x78dee0;
		constexpr auto OnSignal = 0x2f4e50;
		constexpr auto OnSkinChanged = 0x78bee0;
		constexpr auto OnSkinRefreshStart = 0x78c1f0;
		constexpr auto OnSkinRefreshEnd = 0x78c1d0;
		constexpr auto PreProcess = 0x78c5d0;
		constexpr auto HasAnySlot = 0x788670;
		constexpr auto GetSlot = 0x7881f0;
		constexpr auto GetSlotAnchorName = 0x7880b0;
		constexpr auto GetSlotAnchor = 0x788140;
		constexpr auto HasSlot = 0x2f4010;
		constexpr auto get_Traits = 0x2fbec0;
		constexpr auto HasTrait = 0x788900;
		constexpr auto HasAnyTrait = 0x788720;
		constexpr auto EnterTrigger = 0x785250;
		constexpr auto LeaveTrigger = 0x789bd0;
		constexpr auto RemoveFromTriggers = 0x78cb10;
		constexpr auto ForceUpdateTriggersAction = 0x785a20;
		constexpr auto ForceUpdateTriggers = 0x785a50;
		constexpr auto MakeVisible = 0x78ab90;
		constexpr auto UpdateCullingSpheres = 0x78e7a0;
		constexpr auto RegisterForCulling = 0x78c880;
		constexpr auto OnVisibilityChanged = 0x2f4e50;
		constexpr auto UnregisterFromCulling = 0x78e4f0;
		constexpr auto UpdateCullingBounds = 0x78e6d0;
		constexpr auto CheckVisibility = 0x783d40;
		constexpr auto CalcEntityVisUpdateRate = 0x783c20;
		constexpr auto DebugDrawCullingBounds = 0x784260;
		constexpr auto get_Weight = 0x78fba0;
		constexpr auto set_Weight = 0x78fbc0;
		constexpr auto get_Components = 0x78fb20;
		constexpr auto ToPlayer = 0x2fbec0;
		constexpr auto get_IsNpc = 0x2f4010;
		constexpr auto InitShared = 0x788a80;
		constexpr auto DestroyShared = 0x77f610;
		constexpr auto ResetState = 0x78d0d0;
		constexpr auto InheritedVelocityScale = 0x2fc2f0;
		constexpr auto GetInheritedProjectileVelocity = 0x786e30;
		constexpr auto GetInheritedThrowVelocity = 0x786fb0;
		constexpr auto GetInheritedDropVelocity = 0x786d50;
		constexpr auto GetParentVelocity = 0x787df0;
		constexpr auto GetWorldVelocity = 0x788250;
		constexpr auto GetLocalVelocity = 0x787470;
		constexpr auto GetAngularVelocity = 0x786610;
		constexpr auto WorldSpaceBounds = 0x78f850;
		constexpr auto PivotPoint = 0x56e830;
		constexpr auto CenterPoint = 0x783d00;
		constexpr auto ClosestPoint = 0x783f60;
		constexpr auto TriggerPoint = 0x783d00;
		constexpr auto Distance = 0x7846b0;
		constexpr auto SqrDistance = 0x78e0f0;
		constexpr auto Distance2D = 0x784520;
		constexpr auto SqrDistance2D = 0x78df60;
		constexpr auto IsVisible = 0x789820;
		constexpr auto IsVisibleAndCanSee = 0x789250;
		constexpr auto IsOlderThan = 0x788eb0;
		constexpr auto IsOutside = 0x788f70;
		constexpr auto WaterFactor = 0x78f3d0;
		constexpr auto AirFactor = 0x7834d0;
		constexpr auto WaterTestFromVolumes = 0x78f590;
		constexpr auto IsInWaterVolume = 0x788b60;
		constexpr auto BlocksWaterFor = 0x2f4010;
		constexpr auto Health = 0x2fc2f0;
		constexpr auto MaxHealth = 0x2fc2f0;
		constexpr auto MaxVelocity = 0x2fc2f0;
		constexpr auto BoundsPadding = 0x783510;
		constexpr auto PenetrationResistance = 0x2fc560;
		constexpr auto GetImpactEffect = 0x786d40;
		constexpr auto OnAttacked = 0x2f4e50;
		constexpr auto GetItem = 0x2fbec0;
		constexpr auto GiveItem = 0x788640;
		constexpr auto CanBeLooted = 0x2f6b40;
		constexpr auto GetEntity = 0x322380;
		constexpr auto ToString = 0x78e400;
		constexpr auto Categorize = 0x783cd0;
		constexpr auto Log = 0x78a6e0;
		constexpr auto SetModel = 0x78d870;
		constexpr auto GetModel = 0x787bd0;
		constexpr auto GetBones = 0x7866b0;
		constexpr auto FindBone = 0x7855d0;
		constexpr auto FindClosestBone = 0x785680;
		constexpr auto get_OwnerID = 0x78fb90;
		constexpr auto set_OwnerID = 0x78fbb0;
		constexpr auto ShouldBlockProjectiles = 0x2f6b40;
		constexpr auto ShouldInheritNetworkGroup = 0x2f6b40;
		constexpr auto SupportsChildDeployables = 0x2f6b40;
		constexpr auto BroadcastEntityMessage = 0x783520;
		constexpr auto OnEntityMessage = 0x2f4e50;
		constexpr auto Load = 0x78a1e0;
		constexpr auto ctor = 0x78fa10;
		constexpr auto cctor = 0x78f990;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x2154fa0;
		constexpr auto get_deltaTime = 0x2154df0;
		constexpr auto get_fixedTime = 0x2154e50;
		constexpr auto get_unscaledTime = 0x2155000;
		constexpr auto get_unscaledDeltaTime = 0x2154fd0;
		constexpr auto get_fixedDeltaTime = 0x2154e20;
		constexpr auto set_fixedDeltaTime = 0x2155030;
		constexpr auto get_maximumDeltaTime = 0x2154eb0;
		constexpr auto set_maximumDeltaTime = 0x2155070;
		constexpr auto get_smoothDeltaTime = 0x2154f40;
		constexpr auto get_timeScale = 0x2154f70;
		constexpr auto set_timeScale = 0x21550b0;
		constexpr auto get_frameCount = 0x2154e80;
		constexpr auto get_renderedFrameCount = 0x2154f10;
		constexpr auto get_realtimeSinceStartup = 0x2154ee0;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x2268980;
		constexpr auto get_queriesHitBackfaces = 0x22689c0;
		constexpr auto set_queriesHitBackfaces = 0x2268a30;
		constexpr auto get_defaultPhysicsScene = 0x2268900;
		constexpr auto IgnoreCollision = 0x22651b0;
		constexpr auto Raycast = 0x2267120;
		constexpr auto Linecast = 0x22652f0;
		constexpr auto CapsuleCast = 0x22649f0;
		constexpr auto SphereCast = 0x2268390;
		constexpr auto BoxCast = 0x2264580;
		constexpr auto Internal_RaycastAll = 0x2265280;
		constexpr auto RaycastAll = 0x2265e60;
		constexpr auto RaycastNonAlloc = 0x2266580;
		constexpr auto Query_SphereCastAll = 0x2265d00;
		constexpr auto SphereCastAll = 0x2267e00;
		constexpr auto SyncTransforms = 0x2268860;
		constexpr auto get_autoSyncTransforms = 0x2268890;
		constexpr auto set_autoSyncTransforms = 0x22689f0;
		constexpr auto OverlapSphereNonAlloc = 0x2265bd0;
		constexpr auto CheckSphere_Internal = 0x2264fd0;
		constexpr auto CheckSphere = 0x2265040;
		constexpr auto SphereCastNonAlloc = 0x2267f90;
		constexpr auto CheckCapsule_Internal = 0x2264d30;
		constexpr auto CheckCapsule = 0x2264da0;
		constexpr auto CheckBox_Internal = 0x2264b70;
		constexpr auto CheckBox = 0x2264be0;
		constexpr auto OverlapBox_Internal = 0x22658b0;
		constexpr auto OverlapBox = 0x2265920;
		constexpr auto OverlapBoxNonAlloc = 0x2265750;
		constexpr auto OverlapCapsuleNonAlloc = 0x2265ae0;
		constexpr auto get_gravity_Injected = 0x2268940;
		constexpr auto get_defaultPhysicsScene_Injected = 0x22688c0;
		constexpr auto Internal_RaycastAll_Injected = 0x2265210;
		constexpr auto Query_SphereCastAll_Injected = 0x2265c90;
		constexpr auto CheckSphere_Internal_Injected = 0x2264f60;
		constexpr auto CheckCapsule_Internal_Injected = 0x2264cc0;
		constexpr auto CheckBox_Internal_Injected = 0x2264b00;
		constexpr auto OverlapBox_Internal_Injected = 0x2265840;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x8305b0;
		constexpr auto LookupNameLower = 0x8302f0;
		constexpr auto LookupNameUpper = 0x830450;
		constexpr auto GetName = 0x830230;
		constexpr auto GetNameLower = 0x8300b0;
		constexpr auto GetNameUpper = 0x830170;
		constexpr auto cctor = 0x8306f0;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x1918030;
		constexpr auto get_gameObject = 0x1917ff0;
		constexpr auto GetComponent = 0x1917bd0;
		constexpr auto GetComponentFastPath = 0x1917a60;
		constexpr auto GetComponentInChildren = 0x1917ac0;
		constexpr auto GetComponentsInChildren = 0x1917cb0;
		constexpr auto GetComponentInParent = 0x1917b50;
		constexpr auto GetComponents = 0x1917d10;
		constexpr auto GetComponentsForListInternal = 0x1917c50;
		constexpr auto CompareTag = 0x19179e0;
		constexpr auto SendMessageUpwards = 0x1917e00;
		constexpr auto SendMessage = 0x1917f40;
		constexpr auto BroadcastMessage = 0x1917970;
		constexpr auto ctor = 0x19129c0;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x18e8a30;
		constexpr auto get_position = 0x2157e40;
		constexpr auto set_position = 0x21587c0;
		constexpr auto get_localPosition = 0x2157b10;
		constexpr auto set_localPosition = 0x2158530;
		constexpr auto get_eulerAngles = 0x2157810;
		constexpr auto set_eulerAngles = 0x2158280;
		constexpr auto get_localEulerAngles = 0x2157a30;
		constexpr auto set_localEulerAngles = 0x2158430;
		constexpr auto get_right = 0x2157e90;
		constexpr auto set_right = 0x2158810;
		constexpr auto get_up = 0x2158080;
		constexpr auto set_up = 0x2158a00;
		constexpr auto get_forward = 0x21578a0;
		constexpr auto set_forward = 0x2158330;
		constexpr auto get_rotation = 0x2158030;
		constexpr auto set_rotation = 0x21589b0;
		constexpr auto get_localRotation = 0x2157bb0;
		constexpr auto set_localRotation = 0x21585d0;
		constexpr auto get_localScale = 0x2157c50;
		constexpr auto set_localScale = 0x2158670;
		constexpr auto get_parent = 0x2156230;
		constexpr auto set_parent = 0x21586c0;
		constexpr auto get_parentInternal = 0x2156230;
		constexpr auto set_parentInternal = 0x2157210;
		constexpr auto GetParent = 0x2156230;
		constexpr auto SetParent = 0x2157210;
		constexpr auto get_worldToLocalMatrix = 0x2158220;
		constexpr auto get_localToWorldMatrix = 0x2157cf0;
		constexpr auto SetPositionAndRotation = 0x21572c0;
		constexpr auto Translate = 0x2157600;
		constexpr auto Rotate = 0x2156c20;
		constexpr auto RotateAroundInternal = 0x2156980;
		constexpr auto RotateAround = 0x21569e0;
		constexpr auto LookAt = 0x21567b0;
		constexpr auto Internal_LookAt = 0x2156350;
		constexpr auto TransformDirection = 0x21573c0;
		constexpr auto InverseTransformDirection = 0x2156410;
		constexpr auto TransformVector = 0x2157540;
		constexpr auto InverseTransformVector = 0x2156590;
		constexpr auto TransformPoint = 0x2157480;
		constexpr auto InverseTransformPoint = 0x21564d0;
		constexpr auto get_root = 0x2156270;
		constexpr auto GetRoot = 0x2156270;
		constexpr auto get_childCount = 0x21577d0;
		constexpr auto DetachChildren = 0x2156040;
		constexpr auto SetAsFirstSibling = 0x2157130;
		constexpr auto SetAsLastSibling = 0x2157170;
		constexpr auto SetSiblingIndex = 0x2157320;
		constexpr auto GetSiblingIndex = 0x21562b0;
		constexpr auto FindRelativeTransformWithPath = 0x2156080;
		constexpr auto Find = 0x21560e0;
		constexpr auto get_lossyScale = 0x2157da0;
		constexpr auto IsChildOf = 0x21565f0;
		constexpr auto get_hasChanged = 0x21579f0;
		constexpr auto set_hasChanged = 0x21583e0;
		constexpr auto GetEnumerator = 0x21561c0;
		constexpr auto GetChild = 0x2156180;
		constexpr auto get_position_Injected = 0x2157df0;
		constexpr auto set_position_Injected = 0x2158770;
		constexpr auto get_localPosition_Injected = 0x2157ac0;
		constexpr auto set_localPosition_Injected = 0x21584e0;
		constexpr auto get_rotation_Injected = 0x2157fe0;
		constexpr auto set_rotation_Injected = 0x2158960;
		constexpr auto get_localRotation_Injected = 0x2157b60;
		constexpr auto set_localRotation_Injected = 0x2158580;
		constexpr auto get_localScale_Injected = 0x2157c00;
		constexpr auto set_localScale_Injected = 0x2158620;
		constexpr auto get_worldToLocalMatrix_Injected = 0x21581d0;
		constexpr auto get_localToWorldMatrix_Injected = 0x2157ca0;
		constexpr auto SetPositionAndRotation_Injected = 0x2157260;
		constexpr auto RotateAroundInternal_Injected = 0x2156920;
		constexpr auto Internal_LookAt_Injected = 0x21562f0;
		constexpr auto TransformDirection_Injected = 0x2157360;
		constexpr auto InverseTransformDirection_Injected = 0x21563b0;
		constexpr auto TransformVector_Injected = 0x21574e0;
		constexpr auto InverseTransformVector_Injected = 0x2156530;
		constexpr auto TransformPoint_Injected = 0x2157420;
		constexpr auto InverseTransformPoint_Injected = 0x2156470;
		constexpr auto get_lossyScale_Injected = 0x2157d50;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0x63e2d0;
		constexpr auto Trace = 0x63ebc0;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x5a9ce0;
		constexpr auto HitNormalWorld = 0x5a9bc0;
		constexpr auto BuildAttackMessage = 0x5a9330;
		constexpr auto Clear = 0x5a9ae0;
		constexpr auto ctor = 0x303750;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x18eed30;
		constexpr auto Inverse = 0x18ef0b0;
		constexpr auto Slerp = 0x18efb30;
		constexpr auto SlerpUnclamped = 0x18efa10;
		constexpr auto Lerp = 0x18ef2e0;
		constexpr auto LerpUnclamped = 0x18ef1c0;
		constexpr auto Internal_FromEulerRad = 0x18eee20;
		constexpr auto Internal_ToEulerRad = 0x18eefd0;
		constexpr auto AngleAxis = 0x18ee710;
		constexpr auto LookRotation = 0x18ef540;
		constexpr auto ctor = 0x129be0;
		constexpr auto get_identity = 0x18f0050;
		constexpr auto op_Multiply = 0x18f0470;
		constexpr auto IsEqualUsingDot = 0x18ef140;
		constexpr auto op_Equality = 0x18f00c0;
		constexpr auto op_Inequality = 0x18f0180;
		constexpr auto Dot = 0x18ee8d0;
		constexpr auto SetLookRotation = 0x2199d0;
		constexpr auto Angle = 0x18ee7b0;
		constexpr auto Internal_MakePositive = 0x18eeeb0;
		constexpr auto get_eulerAngles = 0x219af0;
		constexpr auto Euler = 0x18eea00;
		constexpr auto RotateTowards = 0x18ef5e0;
		constexpr auto GetHashCode = 0x219960;
		constexpr auto Equals = 0x219810;
		constexpr auto ToString = 0x219ae0;
		constexpr auto cctor = 0x18efe20;
		constexpr auto FromToRotation_Injected = 0x18eecd0;
		constexpr auto Inverse_Injected = 0x18ef060;
		constexpr auto Slerp_Injected = 0x18efac0;
		constexpr auto SlerpUnclamped_Injected = 0x18ef9a0;
		constexpr auto Lerp_Injected = 0x18ef270;
		constexpr auto LerpUnclamped_Injected = 0x18ef150;
		constexpr auto Internal_FromEulerRad_Injected = 0x18eedd0;
		constexpr auto Internal_ToEulerRad_Injected = 0x18eef80;
		constexpr auto AngleAxis_Injected = 0x18ee6b0;
		constexpr auto LookRotation_Injected = 0x18ef390;
	};

	namespace GamePhysics {
		constexpr auto hitBufferB = 0x8;
		constexpr auto colBuffer = 0x10;

		constexpr auto CheckSphere = 0x639dd0;
		constexpr auto CheckCapsule = 0x6395e0;
		constexpr auto CheckOBB = 0x639ca0;
		constexpr auto CheckBounds = 0x639480;
		constexpr auto CheckInsideNonConvexMesh = 0x6398f0;
		constexpr auto CheckInsideAnyCollider = 0x639760;
		constexpr auto OverlapSphere = 0x63aef0;
		constexpr auto OverlapCapsule = 0x63ac70;
		constexpr auto OverlapOBB = 0x63ada0;
		constexpr auto OverlapBounds = 0x63aad0;
		constexpr auto BufferToList = 0x6392e0;
		constexpr auto Trace = 0x63b570;
		constexpr auto TraceAll = 0x63b4a0;
		constexpr auto TraceAllUnordered = 0x63b1d0;
		constexpr auto LineOfSight = 0x63a440;
		constexpr auto LineOfSightInternal = 0x639fa0;
		constexpr auto Verify = 0x63b770;
		constexpr auto HandleTerrainCollision = 0x639e90;
		constexpr auto Sort = 0x63b0d0;
		constexpr auto cctor = 0x63ba80;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0xb5c8a0;
		constexpr auto Test = 0xb5ea50;
		constexpr auto GetWaterDepth = 0xb5d170;
		constexpr auto GetOverallWaterDepth = 0xb5d020;
		constexpr auto GetBuoyancyWaterInfo = 0xb5ca80;
		constexpr auto GetWaterInfo = 0xb5d500;
		constexpr auto GetWaterInfoFromVolumes = 0xb5d2b0;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x168ff60;
		constexpr auto Asin = 0x168ff70;
		constexpr auto Atan = 0x168ff90;
		constexpr auto Atan2 = 0x168ff80;
		constexpr auto Ceiling = 0x168ffa0;
		constexpr auto Cos = 0x168ffb0;
		constexpr auto Cosh = 0x168ffc0;
		constexpr auto Floor = 0x168fff0;
		constexpr auto InternalRound = 0x1690000;
		constexpr auto InternalTruncate = 0x1690260;
		constexpr auto Sin = 0x1690cf0;
		constexpr auto Tan = 0x1690d30;
		constexpr auto Sinh = 0x1690d00;
		constexpr auto Round = 0x16909d0;
		constexpr auto SplitFractionDouble = 0x1690d10;
		constexpr auto Truncate = 0x1690d40;
		constexpr auto Sqrt = 0x1690d20;
		constexpr auto Log = 0x1690430;
		constexpr auto Log10 = 0x16902c0;
		constexpr auto Exp = 0x168ffe0;
		constexpr auto Pow = 0x1690840;
		constexpr auto Abs = 0x168fe90;
		constexpr auto AbsHelper = 0x168fd30;
		constexpr auto Max = 0x16904e0;
		constexpr auto Min = 0x1690830;
		constexpr auto Sign = 0x1690cb0;
		constexpr auto DivRem = 0x168ffd0;
		constexpr auto cctor = 0x1690df0;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x18df400;
		constexpr auto IsPowerOfTwo = 0x18df820;
		constexpr auto NextPowerOfTwo = 0x18dff90;
		constexpr auto GammaToLinearSpace = 0x18df6f0;
		constexpr auto LinearToGammaSpace = 0x18dfa80;
		constexpr auto FloatToHalf = 0x18df5f0;
		constexpr auto HalfToFloat = 0x18df730;
		constexpr auto PerlinNoise = 0x18dffd0;
		constexpr auto Sin = 0x18e0220;
		constexpr auto Cos = 0x18df440;
		constexpr auto Tan = 0x18e0700;
		constexpr auto Asin = 0x18df1a0;
		constexpr auto Acos = 0x18df090;
		constexpr auto Atan = 0x18df280;
		constexpr auto Atan2 = 0x18df200;
		constexpr auto Sqrt = 0x18e06a0;
		constexpr auto Abs = 0x18df030;
		constexpr auto Min = 0x18dfc30;
		constexpr auto Max = 0x18dfc00;
		constexpr auto Pow = 0x18e0020;
		constexpr auto Exp = 0x18df590;
		constexpr auto Log = 0x18dfb80;
		constexpr auto Log10 = 0x18dfac0;
		constexpr auto Ceil = 0x18df340;
		constexpr auto Floor = 0x18df690;
		constexpr auto Round = 0x18e01a0;
		constexpr auto CeilToInt = 0x18df2e0;
		constexpr auto FloorToInt = 0x18df630;
		constexpr auto RoundToInt = 0x18e0140;
		constexpr auto Sign = 0x18e0200;
		constexpr auto Clamp = 0x18df3c0;
		constexpr auto Clamp01 = 0x18df3a0;
		constexpr auto Lerp = 0x18df9e0;
		constexpr auto LerpUnclamped = 0x18df9c0;
		constexpr auto LerpAngle = 0x18df860;
		constexpr auto MoveTowards = 0x18dfea0;
		constexpr auto MoveTowardsAngle = 0x18dfc40;
		constexpr auto SmoothStep = 0x18e05e0;
		constexpr auto Approximately = 0x18df0f0;
		constexpr auto SmoothDamp = 0x18e0410;
		constexpr auto Repeat = 0x18e00a0;
		constexpr auto InverseLerp = 0x18df770;
		constexpr auto DeltaAngle = 0x18df4a0;
		constexpr auto cctor = 0x18e0760;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x268;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2c0;
		constexpr auto __menuOption_Menu_OpenDoor = 0x318;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x370;
		constexpr auto knockEffect = 0x3c8;
		constexpr auto canTakeLock = 0x3d0;
		constexpr auto hasHatch = 0x3d1;
		constexpr auto canTakeCloser = 0x3d2;
		constexpr auto canTakeKnocker = 0x3d3;
		constexpr auto canNpcOpen = 0x3d4;
		constexpr auto canHandOpen = 0x3d5;
		constexpr auto isSecurityDoor = 0x3d6;
		constexpr auto vehiclePhysBoxes = 0x3d8;
		constexpr auto checkPhysBoxesOnOpen = 0x3e0;
		constexpr auto vehicleCollisionSfx = 0x3e8;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0xa90cc0;
		constexpr auto get_HasMenuOptions = 0xa92230;
		constexpr auto OnRpcMessage = 0xa91b80;
		constexpr auto ResetState = 0xa91fd0;
		constexpr auto HasSlot = 0xa916b0;
		constexpr auto CanPickup = 0xa90b50;
		constexpr auto Menu_OpenDoor = 0xa91860;
		constexpr auto Menu_OpenDoor_ShowIf = 0xa91820;
		constexpr auto Menu_CloseDoor = 0xa91730;
		constexpr auto Menu_CloseDoor_ShowIf = 0xa916f0;
		constexpr auto Menu_KnockDoor = 0xa917e0;
		constexpr auto Menu_KnockDoor_ShowIf = 0xa91770;
		constexpr auto Menu_ToggleHatch = 0xa918b0;
		constexpr auto Menu_ToggleHatch_ShowIf = 0xa918a0;
		constexpr auto NeedsCrosshair = 0x2f6b40;
		constexpr auto OnDoorInterrupted = 0xa918f0;
		constexpr auto ReverseDoorAnimation = 0xa91fe0;
		constexpr auto BoundsPadding = 0x2f64c0;
		constexpr auto OnObjects = 0x2f4e50;
		constexpr auto OnEmpty = 0x2f4e50;
		constexpr auto ctor = 0xa92210;
		constexpr auto cctor = 0xa921a0;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x18e9320;
		constexpr auto GetHashCode = 0x18e9310;
		constexpr auto Equals = 0x18e8f30;
		constexpr auto op_Implicit = 0x18ea320;
		constexpr auto CompareBaseObjects = 0x18e8c40;
		constexpr auto IsNativeObjectAlive = 0x18e9f70;
		constexpr auto GetCachedPtr = 0x18dab40;
		constexpr auto get_name = 0x18ea140;
		constexpr auto set_name = 0x18ea5a0;
		constexpr auto Instantiate = 0x18e9b00;
		constexpr auto Destroy = 0x18e8e30;
		constexpr auto DestroyImmediate = 0x18e8de0;
		constexpr auto FindObjectsOfType = 0x18e92d0;
		constexpr auto DontDestroyOnLoad = 0x18e8ef0;
		constexpr auto get_hideFlags = 0x18ea100;
		constexpr auto set_hideFlags = 0x18ea560;
		constexpr auto CheckNullArgument = 0x18e8bd0;
		constexpr auto FindObjectOfType = 0x18e9240;
		constexpr auto ToString = 0x18ea010;
		constexpr auto op_Equality = 0x18ea1b0;
		constexpr auto op_Inequality = 0x18ea3f0;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x18e9490;
		constexpr auto Internal_CloneSingle = 0x18e9e40;
		constexpr auto Internal_CloneSingleWithParent = 0x18e9de0;
		constexpr auto Internal_InstantiateSingle = 0x18e9ee0;
		constexpr auto GetName = 0x18e9450;
		constexpr auto SetName = 0x18e9fc0;
		constexpr auto FindObjectFromInstanceID = 0x18e9200;
		constexpr auto ctor = 0x303750;
		constexpr auto cctor = 0x18ea0c0;
		constexpr auto Internal_InstantiateSingle_Injected = 0x18e9e80;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x278;
		constexpr auto canAiHearIt = 0x279;
		constexpr auto onlyThrowAsProjectile = 0x27a;
		constexpr auto damageProperties = 0x280;
		constexpr auto damageTypes = 0x288;
		constexpr auto maxDistance = 0x290;
		constexpr auto attackRadius = 0x294;
		constexpr auto isAutomatic = 0x298;
		constexpr auto blockSprintOnAttack = 0x299;
		constexpr auto strikeFX = 0x2a0;
		constexpr auto useStandardHitEffects = 0x2a8;
		constexpr auto aiStrikeDelay = 0x2ac;
		constexpr auto swingEffect = 0x2b0;
		constexpr auto materialStrikeFX = 0x2b8;
		constexpr auto heartStress = 0x2c0;
		constexpr auto gathering = 0x2c8;
		constexpr auto throwReady = 0x2d0;

		constexpr auto OnRpcMessage = 0x2f7f70;
		constexpr auto GetInheritedVelocity = 0x2f79c0;
		constexpr auto DoThrow = 0x2f7190;
		constexpr auto CreateProjectile = 0x2f6b50;
		constexpr auto GetAttackStats = 0x2f7930;
		constexpr auto DoAttackShared = 0x2f6d00;
		constexpr auto OnInput = 0x2f7b90;
		constexpr auto get_CanAttack = 0x2f6b40;
		constexpr auto get_CanThrow = 0x2f6b40;
		constexpr auto ClientAttack = 0x2f4e50;
		constexpr auto OnHolstered = 0x2f7b70;
		constexpr auto ProcessAttack = 0x2f8120;
		constexpr auto DoAttack = 0x2f6f50;
		constexpr auto DoViewmodelImpact = 0x2f78a0;
		constexpr auto OnViewmodelEvent = 0x2f8060;
		constexpr auto GetGatherInfoFromIndex = 0x2f7990;
		constexpr auto CanHit = 0x2f6b40;
		constexpr auto TotalDamage = 0x2f83b0;
		constexpr auto CanBeUsedInWater = 0x2f6b40;
		constexpr auto GetStrikeEffectPath = 0x2f7a10;
		constexpr auto ctor = 0x2f8510;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0x8a1010;
		constexpr auto GetSpreadScalar = 0x8a1050;
		constexpr auto GetIndexedSpreadScalar = 0x8a0f80;
		constexpr auto GetAverageVelocity = 0x8a0f70;
		constexpr auto GetMinVelocity = 0x8a1000;
		constexpr auto GetMaxVelocity = 0x8a0ff0;
		constexpr auto IsAmmo = 0x8a10b0;
		constexpr auto ServerProjectileHit = 0x8a10c0;
		constexpr auto ctor = 0x8a1190;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto shotsUntilMax = 0x54;

		constexpr auto ctor = 0x735710;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto spawnAsBlueprint = 0x64;
		constexpr auto inventorySelectSound = 0x68;
		constexpr auto inventoryGrabSound = 0x70;
		constexpr auto inventoryDropSound = 0x78;
		constexpr auto physImpactSoundDef = 0x80;
		constexpr auto condition = 0x88;
		constexpr auto hidden = 0xa0;
		constexpr auto flags = 0xa4;
		constexpr auto steamItem = 0xa8;
		constexpr auto steamDlc = 0xb0;
		constexpr auto Parent = 0xb8;
		constexpr auto worldModelPrefab = 0xc0;
		constexpr auto isRedirectOf = 0xc8;
		constexpr auto redirectVendingBehaviour = 0xd0;
		constexpr auto itemMods = 0xd8;
		constexpr auto Traits = 0xe0;
		constexpr auto skins = 0xe8;
		constexpr auto _skins2 = 0xf0;
		constexpr auto panel = 0xf8;
		constexpr auto ItemModWearablek__BackingField = 0x100;
		constexpr auto isHoldablek__BackingField = 0x108;
		constexpr auto isUsablek__BackingField = 0x109;
		constexpr auto CraftableWithSkink__BackingField = 0x10a;
		constexpr auto Children = 0x110;

		constexpr auto get_skins2 = 0x8980b0;
		constexpr auto InvalidateWorkshopSkinCache = 0x897e00;
		constexpr auto get_Blueprint = 0x897f10;
		constexpr auto get_craftingStackable = 0x897fd0;
		constexpr auto HasFlag = 0x897ae0;
		constexpr auto Initialize = 0x897af0;
		constexpr auto GetDisplayName = 0x8979e0;
		constexpr auto GetDescriptionText = 0x8978f0;
		constexpr auto FindIconSprite = 0x897620;
		constexpr auto get_isWearable = 0x898050;
		constexpr auto get_ItemModWearable = 0x897fc0;
		constexpr auto set_ItemModWearable = 0x8982c0;
		constexpr auto get_isHoldable = 0x898030;
		constexpr auto set_isHoldable = 0x8982d0;
		constexpr auto get_isUsable = 0x898040;
		constexpr auto set_isUsable = 0x8982e0;
		constexpr auto get_HasSkins = 0x897f60;
		constexpr auto get_CraftableWithSkin = 0x897f50;
		constexpr auto set_CraftableWithSkin = 0x8982b0;
		constexpr auto ctor = 0x897ea0;
		constexpr auto Initializeb__45_0 = 0x897e20;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto offsetAngles = 0x84;
		constexpr auto ignoredButtons = 0x90;
		constexpr auto hasKeyFocus = 0x94;

		constexpr auto OnDisable = 0x96bda0;
		constexpr auto FrameUpdate = 0x96b3b0;
		constexpr auto Flip = 0x96b250;
		constexpr auto AdjustMouseMovement = 0x969a50;
		constexpr auto UpdateViewAngles = 0x96bfb0;
		constexpr auto ApplyViewAngles = 0x969c40;
		constexpr auto SetViewVars = 0x96be90;
		constexpr auto FinalizeRecoil = 0x96b080;
		constexpr auto ResetOffsetAngles = 0x96be20;
		constexpr auto ClientAngles = 0x96b050;
		constexpr auto ClientLookVars = 0x96b060;
		constexpr auto HeadAngles = 0x96b5d0;
		constexpr auto HeadLookVars = 0x96b5e0;
		constexpr auto ModifyInputState = 0x96bd10;
		constexpr auto IsButtonDownNative = 0x96b900;
		constexpr auto BuildInputState = 0x96a750;
		constexpr auto UpdateButton = 0x96bf20;
		constexpr auto IgnoreCurrentButtons = 0x96b600;
		constexpr auto get_hasOnlyPartialKeyInput = 0x96c2a0;
		constexpr auto get_hasNoKeyInput = 0x96c110;
		constexpr auto UpdateKeyFocus = 0x96bf90;
		constexpr auto IgnoreCurrentKeys = 0x96b710;
		constexpr auto ctor = 0x96c0a0;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto smoothLookDir = 0x2c;
		constexpr auto lastSafeLookDir = 0x38;
		constexpr auto Shoulders = 0x48;
		constexpr auto LegParts = 0x50;
		constexpr auto fakeSpineBones = 0x58;
		constexpr auto extraLeanBack = 0x60;
		constexpr auto drawState = 0x64;
		constexpr auto speed = 0x2c;
		constexpr auto acceleration = 0x30;
		constexpr auto rotationYaw = 0x34;
		constexpr auto forward = 0x38;
		constexpr auto right = 0x3c;
		constexpr auto up = 0x40;
		constexpr auto ducked = 0x44;
		constexpr auto grounded = 0x48;
		constexpr auto crawling = 0x4c;
		constexpr auto waterlevel = 0x50;
		constexpr auto attack = 0x54;
		constexpr auto attack_alt = 0x58;
		constexpr auto deploy = 0x5c;
		constexpr auto reload = 0x60;
		constexpr auto throwWeapon = 0x64;
		constexpr auto holster = 0x68;
		constexpr auto aiming = 0x6c;
		constexpr auto onLadder = 0x70;
		constexpr auto posing = 0x74;
		constexpr auto poseType = 0x78;
		constexpr auto relaxGunPose = 0x7c;
		constexpr auto vehicle_aim_yaw = 0x80;
		constexpr auto vehicle_aim_speed = 0x84;
		constexpr auto onPhone = 0x88;
		constexpr auto leftFootIK = 0x8c;
		constexpr auto rightFootIK = 0x90;
		constexpr auto vehicleSteering = 0x94;
		constexpr auto collision = 0x68;
		constexpr auto censorshipCube = 0x70;
		constexpr auto censorshipCubeBreasts = 0x78;
		constexpr auto jawBone = 0x80;
		constexpr auto neckBone = 0x88;
		constexpr auto headBone = 0x90;
		constexpr auto eyeController = 0x98;
		constexpr auto blinkController = 0xa0;
		constexpr auto SpineBones = 0xa8;
		constexpr auto leftFootBone = 0xb0;
		constexpr auto rightFootBone = 0xb8;
		constexpr auto leftHandPropBone = 0xc0;
		constexpr auto rightHandPropBone = 0xc8;
		constexpr auto rightHandTarget = 0xd0;
		constexpr auto leftHandTargetPosition = 0xdc;
		constexpr auto leftHandTargetRotation = 0xe8;
		constexpr auto rightHandTargetPosition = 0xf8;
		constexpr auto rightHandTargetRotation = 0x104;
		constexpr auto steeringTargetDegrees = 0x114;
		constexpr auto rightFootTargetPosition = 0x118;
		constexpr auto rightFootTargetRotation = 0x124;
		constexpr auto leftFootTargetPosition = 0x134;
		constexpr auto leftFootTargetRotation = 0x140;
		constexpr auto CinematicAnimationController = 0x150;
		constexpr auto DefaultAvatar = 0x158;
		constexpr auto CinematicAvatar = 0x160;
		constexpr auto DefaultHoldType = 0x168;
		constexpr auto SleepGesture = 0x170;
		constexpr auto CrawlToIncapacitatedGesture = 0x178;
		constexpr auto StandToIncapacitatedGesture = 0x180;
		constexpr auto CurrentGesture = 0x188;
		constexpr auto MaleSkin = 0x190;
		constexpr auto FemaleSkin = 0x198;
		constexpr auto subsurfaceProfile = 0x1a0;
		constexpr auto voiceVolume = 0x1a8;
		constexpr auto skinColor = 0x1ac;
		constexpr auto skinNumber = 0x1b0;
		constexpr auto meshNumber = 0x1b4;
		constexpr auto hairNumber = 0x1b8;
		constexpr auto skinType = 0x1bc;
		constexpr auto movementSounds = 0x1c0;
		constexpr auto showSash = 0x1c8;
		constexpr auto tempPoseType = 0x1cc;
		constexpr auto underwearSkin = 0x1d0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1d8;
		constexpr auto AimAnglesk__BackingField = 0x1e0;
		constexpr auto LookAnglesk__BackingField = 0x1f0;
		constexpr auto modelState = 0x200;
		constexpr auto position = 0x208;
		constexpr auto velocity = 0x214;
		constexpr auto speedOverride = 0x220;
		constexpr auto newVelocity = 0x22c;
		constexpr auto rotation = 0x238;
		constexpr auto mountedRotation = 0x248;
		constexpr auto smoothLeftFootIK = 0x258;
		constexpr auto smoothRightFootIK = 0x264;
		constexpr auto drawShadowOnly = 0x270;
		constexpr auto isIncapacitated = 0x271;
		constexpr auto flinchLocation = 0x274;
		constexpr auto visible = 0x278;
		constexpr auto nameTag = 0x280;
		constexpr auto animatorNeedsWarmup = 0x288;
		constexpr auto isLocalPlayer = 0x289;
		constexpr auto aimSoundDef = 0x290;
		constexpr auto aimEndSoundDef = 0x298;
		constexpr auto InGesture = 0x2a0;
		constexpr auto CurrentGestureConfig = 0x2a8;
		constexpr auto InCinematic = 0x2b0;
		constexpr auto defaultAnimatorController = 0x2b8;
		constexpr auto _multiMesh = 0x2c0;
		constexpr auto _animator = 0x2c8;
		constexpr auto _lodGroup = 0x2d0;
		constexpr auto _currentGesture = 0x2d8;
		constexpr auto holdTypeLock = 0x2e0;
		constexpr auto wasMountedRightAim = 0x2e4;
		constexpr auto cachedMask = 0x2e8;
		constexpr auto cachedConstructionMask = 0x2ec;
		constexpr auto WorkshopHeldEntity = 0x2f0;
		constexpr auto wasCrawling = 0x2f8;
		constexpr auto mountedSpineLookWeight = 0x2fc;
		constexpr auto mountedAnimSpeed = 0x300;
		constexpr auto IsNpck__BackingField = 0x304;
		constexpr auto timeSinceLeftFootTest = 0x308;
		constexpr auto cachedLeftFootPos = 0x30c;
		constexpr auto cachedLeftFootNormal = 0x318;
		constexpr auto timeSinceRightFootTest = 0x324;
		constexpr auto cachedRightFootPos = 0x328;
		constexpr auto cachedRightFootNormal = 0x334;

		constexpr auto SpineIk = 0xbb4a50;
		constexpr auto ParentArmsToCamera = 0xbb2f90;
		constexpr auto OnAnimatorIK = 0xbb2550;
		constexpr auto HandIK = 0xbb0ef0;
		constexpr auto FootIK = 0xbad780;
		constexpr auto HeadIK = 0xbb1350;
		constexpr auto get_ShouldDoLegs = 0xbb9bb0;
		constexpr auto get_ShouldShowHands = 0xbb9c30;
		constexpr auto ClearLegs = 0xbac430;
		constexpr auto RebuildLegs = 0xbb3990;
		constexpr auto InitializeLegSpineBones = 0xbb1a70;
		constexpr auto UpdateLegsBeforeRender = 0xbb6170;
		constexpr auto AddLegRenderer = 0xbabb00;
		constexpr auto SwapLegBone = 0xbb5390;
		constexpr auto GetFlat = 0xbb0360;
		constexpr auto RebuildAll = 0xbb3590;
		constexpr auto get_overrideSkinSeed = 0xbb9fa0;
		constexpr auto set_overrideSkinSeed = 0xbb9fe0;
		constexpr auto get_IsFemale = 0xbb9b60;
		constexpr auto get_SkinSet = 0xbb9da0;
		constexpr auto get_AimAngles = 0xbb9a10;
		constexpr auto set_AimAngles = 0xbb9fb0;
		constexpr auto get_LookAngles = 0xbb9ba0;
		constexpr auto set_LookAngles = 0xbb9fd0;
		constexpr auto get_GestureAllowsSpineMovement = 0xbb9ac0;
		constexpr auto get_GestureAllowsRootMotion = 0xbb9a20;
		constexpr auto get_IsFirstPerson = 0xbb9b70;
		constexpr auto get_IsNpc = 0xbb9b90;
		constexpr auto set_IsNpc = 0xbb9fc0;
		constexpr auto get_multiMesh = 0xbb9f00;
		constexpr auto get_animator = 0xbb9dc0;
		constexpr auto get_lodGroup = 0xbb9e60;
		constexpr auto GetTargetVelocity = 0xbb0d90;
		constexpr auto Awake = 0xbac390;
		constexpr auto OnEnable = 0xbb29b0;
		constexpr auto OnDisable = 0xbb2680;
		constexpr auto UpdateMultiMesh = 0xbb7190;
		constexpr auto UpdateCensorship = 0xbb5840;
		constexpr auto UpdateCollider = 0xbb5cc0;
		constexpr auto UpdateModelState = 0xbb7140;
		constexpr auto UpdatePosition = 0xbb7c00;
		constexpr auto UpdateRotation = 0xbb7d20;
		constexpr auto UpdateLocalVelocity = 0xbb7070;
		constexpr auto UpdateVelocity = 0xbb8640;
		constexpr auto UpdateParameters = 0xbb7370;
		constexpr auto UpdateFrom = 0xbb5f30;
		constexpr auto UpdateGlobalShaderConstants = 0xbb5fe0;
		constexpr auto LateCycle = 0xbb1ed0;
		constexpr auto FrameUpdate = 0xbaf9b0;
		constexpr auto FrameUpdate_Default = 0xbaf010;
		constexpr auto FrameUpdate_Sleeping = 0xbaf720;
		constexpr auto FrameUpdate_Incapacitated = 0xbaf180;
		constexpr auto FrameUpdate_OnLadder = 0xbaf450;
		constexpr auto GetAim360 = 0xbb00f0;
		constexpr auto UpdateVehicleAim360 = 0xbb8180;
		constexpr auto DoAimingSounds = 0xbacf20;
		constexpr auto SetAimSounds = 0xbb42e0;
		constexpr auto SetMountedLookAtWeight = 0xbb4900;
		constexpr auto SetMountedAnimationSpeed = 0xbb48f0;
		constexpr auto UpdateLocalPlayerPosition = 0xbb6d20;
		constexpr auto Attack = 0xbac310;
		constexpr auto AltAttack = 0xbabfd0;
		constexpr auto Deploy = 0xbace70;
		constexpr auto Reload = 0xbb4060;
		constexpr auto Holster = 0xbb19f0;
		constexpr auto Flinch = 0xbad720;
		constexpr auto Throw = 0xbb5630;
		constexpr auto Gesture = 0xbafd60;
		constexpr auto FadeInGestureUpperBodyLayer = 0xbad180;
		constexpr auto FadeOutGestureUpperBodyLayer = 0xbad470;
		constexpr auto FadeInGestureFullBodyLayer = 0xbad060;
		constexpr auto FadeOutGestureFullBodyLayer = 0xbad2a0;
		constexpr auto AnimatorWarmup = 0xbac080;
		constexpr auto AlwaysAnimate = 0xbac050;
		constexpr auto SetHoldType = 0xbb4570;
		constexpr auto FadeOutGestureLayer = 0xbad400;
		constexpr auto SetGesture = 0xbb4320;
		constexpr auto FadeOutPlayerGestureLayers = 0xbad5d0;
		constexpr auto StopGesture = 0xbb5290;
		constexpr auto PlayCinematic = 0xbb3400;
		constexpr auto StopCinematic = 0xbb5230;
		constexpr auto SetSpeedOverride = 0xbb4a30;
		constexpr auto GetReplacementUnderwear = 0xbb0cd0;
		constexpr auto RemoveUnderwearParts = 0xbb41b0;
		constexpr auto Clear = 0xbac590;
		constexpr auto Rebuild = 0xbb3c20;
		constexpr auto AddPart = 0xbabe30;
		constexpr auto RemovePart = 0xbb40e0;
		constexpr auto HasPart = 0xbb1290;
		constexpr auto IsBarefoot = 0xbb1e40;
		constexpr auto GetSkinColor = 0xbb0d10;
		constexpr auto SetSkinProperties = 0xbb4910;
		constexpr auto RefreshUnderwear = 0xbb3cd0;
		constexpr auto ForceModelSeed = 0xbaede0;
		constexpr auto FindBone = 0xbad6f0;
		constexpr auto GetBones = 0xbb0330;
		constexpr auto GetFootPlacement = 0xbb03a0;
		constexpr auto ApplyVisibility = 0xbac0e0;
		constexpr auto ToggleUpdateOffscreen = 0xbb56d0;
		constexpr auto OnParentDestroying = 0xbb2e90;
		constexpr auto WorkshopPreviewSetup = 0xbb8a50;
		constexpr auto ctor = 0xbb9860;
		constexpr auto cctor = 0xbb93f0;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x1e1b4e0;
		constexpr auto Dispose = 0x1e1b0e0;
		constexpr auto EnterPool = 0x1158180;
		constexpr auto LeavePool = 0x11581b0;
		constexpr auto CopyTo = 0x1e195f0;
		constexpr auto Copy = 0x1e19830;
		constexpr auto Deserialize = 0x1e1a5e0;
		constexpr auto DeserializeLengthDelimited = 0x1e198b0;
		constexpr auto DeserializeLength = 0x1e19d60;
		constexpr auto FromProto = 0x1e1b160;
		constexpr auto WriteToStream = 0x1e1c3a0;
		constexpr auto WriteToStreamDelta = 0x1e1c3c0;
		constexpr auto ReadFromStream = 0x1e1b4c0;
		constexpr auto SerializeDelta = 0x1e1b990;
		constexpr auto Serialize = 0x1e1bfb0;
		constexpr auto ToProtoBytes = 0x1e1c390;
		constexpr auto ToProto = 0x1e1c3a0;
		constexpr auto SerializeToBytes = 0x1e1bea0;
		constexpr auto SerializeLengthDelimited = 0x1e1bdf0;
		constexpr auto ctor = 0xeb22b0;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0x96d000;
		constexpr auto Initialize = 0x96cc80;
		constexpr auto DoDestroy = 0x96c530;
		constexpr auto ClientInit = 0x96c4b0;
		constexpr auto UpdatedItemContainer = 0x96d450;
		constexpr auto FindItemUID = 0x96caa0;
		constexpr auto FindItemID = 0x96c7c0;
		constexpr auto FindItemIDs = 0x96c9b0;
		constexpr auto FindContainer = 0x96c610;
		constexpr auto GetContainer = 0x96cc00;
		constexpr auto Load = 0x96ceb0;
		constexpr auto GetAmount = 0x96cb80;
		constexpr auto AllItems = 0x96c3e0;
		constexpr auto AllItemsNoAlloc = 0x96c310;
		constexpr auto FindAmmo = 0x96c5c0;
		constexpr auto HasAmmo = 0x96cc20;
		constexpr auto ctor = 0x96d640;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItems = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0x895ab0;
		constexpr auto SetFlag = 0x896b20;
		constexpr auto IsLocked = 0x895c80;
		constexpr auto PlayerItemInputBlocked = 0x896770;
		constexpr auto get_HasLimitedAllowedItems = 0x896e60;
		constexpr auto OnChanged = 0x8966d0;
		constexpr auto ClientInitialize = 0x894e50;
		constexpr auto FindItemByUID = 0x895280;
		constexpr auto IsFull = 0x895c30;
		constexpr auto IsEmpty = 0x895bf0;
		constexpr auto CanAccept = 0x894d60;
		constexpr auto GetMaxTransferAmount = 0x895760;
		constexpr auto SetOnlyAllowedItem = 0x896b40;
		constexpr auto SetOnlyAllowedItems = 0x896c00;
		constexpr auto Insert = 0x895ac0;
		constexpr auto SlotTaken = 0x896d90;
		constexpr auto GetSlot = 0x895910;
		constexpr auto FindPosition = 0x895560;
		constexpr auto Clear = 0x894db0;
		constexpr auto Kill = 0x895c90;
		constexpr auto GetAmount = 0x8955f0;
		constexpr auto FindItemByItemID = 0x895110;
		constexpr auto FindItemsByItemName = 0x895410;
		constexpr auto FindItemsByItemID = 0x895360;
		constexpr auto Save = 0x896780;
		constexpr auto Load = 0x895f20;
		constexpr auto GetOwnerPlayer = 0x4699b0;
		constexpr auto FindAmmo = 0x894f60;
		constexpr auto HasAmmo = 0x8959e0;
		constexpr auto ContentsHash = 0x894e90;
		constexpr auto FindContainer = 0x895020;
		constexpr auto CanAcceptItem = 0x8948f0;
		constexpr auto ctor = 0x896db0;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto OnDirty = 0x68;
		constexpr auto flags = 0x70;
		constexpr auto contents = 0x78;
		constexpr auto parent = 0x80;
		constexpr auto worldEnt = 0x88;
		constexpr auto heldEntity = 0x98;

		constexpr auto UpdateAmountDisplay = 0x913b00;
		constexpr auto FormatAmount = 0x912920;
		constexpr auto set_condition = 0x914ac0;
		constexpr auto get_condition = 0x7bbee0;
		constexpr auto set_maxCondition = 0x914b40;
		constexpr auto get_maxCondition = 0x8e4870;
		constexpr auto get_maxConditionNormalized = 0x914870;
		constexpr auto get_conditionNormalized = 0x914400;
		constexpr auto set_conditionNormalized = 0x914a20;
		constexpr auto get_hasCondition = 0x914500;
		constexpr auto get_isBroken = 0x914740;
		constexpr auto get_despawnMultiplier = 0x914440;
		constexpr auto get_blueprintTargetDef = 0x9143d0;
		constexpr auto get_blueprintTarget = 0x9143f0;
		constexpr auto set_blueprintTarget = 0x914990;
		constexpr auto get_blueprintAmount = 0x9143c0;
		constexpr auto set_blueprintAmount = 0x914980;
		constexpr auto IsBlueprint = 0x912cc0;
		constexpr auto add_OnDirty = 0x914300;
		constexpr auto remove_OnDirty = 0x9148e0;
		constexpr auto HasFlag = 0x912cb0;
		constexpr auto SetFlag = 0x9136d0;
		constexpr auto IsOn = 0x912ef0;
		constexpr auto IsOnFire = 0x912ee0;
		constexpr auto IsCooking = 0x912ea0;
		constexpr auto IsLocked = 0x912eb0;
		constexpr auto get_parentItem = 0x9148a0;
		constexpr auto MarkDirty = 0x913230;
		constexpr auto OnChanged = 0x913390;
		constexpr auto CollectedForCrafting = 0x2f4e50;
		constexpr auto ReturnedFromCancelledCraft = 0x2f4e50;
		constexpr auto IsChildContainer = 0x912d10;
		constexpr auto IsBusy = 0x912ce0;
		constexpr auto BusyFor = 0x912610;
		constexpr auto Remove = 0x9134c0;
		constexpr auto DoRemove = 0x9127e0;
		constexpr auto SwitchOnOff = 0x9137e0;
		constexpr auto LockUnlock = 0x913200;
		constexpr auto get_temperature = 0x9148c0;
		constexpr auto GetOwnerPlayer = 0x912b30;
		constexpr auto CanBeHeld = 0x912640;
		constexpr auto CanStack = 0x912680;
		constexpr auto IsValid = 0x912f00;
		constexpr auto SetWorldEntity = 0x9136f0;
		constexpr auto OnMovedToWorld = 0x913430;
		constexpr auto GetWorldEntity = 0x912be0;
		constexpr auto GetHeldEntity = 0x912b10;
		constexpr auto BeltBarSelect = 0x912570;
		constexpr auto GetTotalUISlots = 0x912b50;
		constexpr auto GetFilledUISlots = 0x912a80;
		constexpr auto HasAmmo = 0x912c00;
		constexpr auto FindAmmo = 0x912830;
		constexpr auto ToString = 0x913810;
		constexpr auto FindItem = 0x912900;
		constexpr auto MaxStackable = 0x913300;
		constexpr auto get_iconSprite = 0x9145a0;
		constexpr auto get_isLoadingIconSprite = 0x914770;
		constexpr auto get_Traits = 0x9143a0;
		constexpr auto Save = 0x913520;
		constexpr auto Load = 0x912f10;
		constexpr auto ctor = 0x9142e0;
		constexpr auto cctor = 0x914210;
		constexpr auto get_iconSpriteb__93_0 = 0x913af0;
		constexpr auto get_isLoadingIconSpriteb__95_0 = 0x913af0;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x8e3e00;
		constexpr auto BuildBoneDictionary = 0x8e35b0;
		constexpr auto GetSkin = 0x4a6da0;
		constexpr auto FindBoneInternal = 0x8e3660;
		constexpr auto FindBone = 0x8e36f0;
		constexpr auto GetBones = 0x8e3900;
		constexpr auto FindClosestBone = 0x8e3760;
		constexpr auto get_lodGroup = 0x8e45f0;
		constexpr auto OnDisable = 0x8e3cd0;
		constexpr auto SyncBones = 0x8e41d0;
		constexpr auto Trigger = 0x8e4540;
		constexpr auto GetTransform = 0x8e3930;
		constexpr auto ApplyVisibility = 0x8e3420;
		constexpr auto PreProcess = 0x8e3e10;
		constexpr auto ctor = 0x2f6b30;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x278;
		constexpr auto healDurationOther = 0x27c;
		constexpr auto healDurationOtherWounded = 0x280;
		constexpr auto maxDistanceOther = 0x284;
		constexpr auto canUseOnOther = 0x288;
		constexpr auto canRevive = 0x289;
		constexpr auto useTarget = 0x290;
		constexpr auto resetTime = 0x298;

		constexpr auto OnRpcMessage = 0x81bc60;
		constexpr auto GetTarget = 0x81b500;
		constexpr auto AnyPressed = 0x81b430;
		constexpr auto OnInput = 0x81b8b0;
		constexpr auto OnViewmodelEvent = 0x81c030;
		constexpr auto Reset = 0x81c180;
		constexpr auto OnDeploy = 0x81b850;
		constexpr auto OnHolstered = 0x81b880;
		constexpr auto ctor = 0x81c1a0;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x160;
		constexpr auto punchAdded = 0x168;
		constexpr auto lastPunchTime = 0x174;
		constexpr auto worldModelAnimator = 0x178;
		constexpr auto thirdPersonDeploySound = 0x180;
		constexpr auto thirdPersonAimSound = 0x188;
		constexpr auto thirdPersonAimEndSound = 0x190;
		constexpr auto viewModel = 0x198;
		constexpr auto isDeployed = 0x1a0;
		constexpr auto nextExamineTime = 0x1a4;
		constexpr auto handBone = 0x1a8;
		constexpr auto HoldAnimationOverride = 0x1b0;
		constexpr auto toolType = 0x1b8;
		constexpr auto isBuildingTool = 0x1b9;
		constexpr auto hostileScore = 0x1bc;
		constexpr auto holsterInfo = 0x1c0;
		constexpr auto HeldCameraMode = 0x1c8;
		constexpr auto FirstPersonArmOffset = 0x1cc;
		constexpr auto FirstPersonArmRotation = 0x1d8;
		constexpr auto FirstPersonRotationStrength = 0x1e4;
		constexpr auto ownerItemUID = 0x1e8;

		constexpr auto OnRpcMessage = 0x5a4850;
		constexpr auto AddPunch = 0x5a3bc0;
		constexpr auto CL_Punch = 0x5a3c90;
		constexpr auto DoRecoilCompensation = 0x2f4e50;
		constexpr auto SimPunches = 0x5a4ef0;
		constexpr auto ClientInit = 0x5a3d40;
		constexpr auto GetFovOverride = 0x5a3f70;
		constexpr auto DoNetworkDestroy = 0x5a3e10;
		constexpr auto PostLateClientCycle = 0x2f4e50;
		constexpr auto PostNetworkUpdate = 0x5a4d00;
		constexpr auto UpdateHolsteredOffset = 0x5a53d0;
		constexpr auto EditViewAngles = 0x2f4e50;
		constexpr auto ClampPitch = 0x2f4e50;
		constexpr auto OnFrame = 0x5a46c0;
		constexpr auto OnInput = 0x2f4e50;
		constexpr auto Examine = 0x5a3e50;
		constexpr auto OnDeploy = 0x5a44a0;
		constexpr auto OnDeployed = 0x5a46b0;
		constexpr auto OnHolster = 0x5a46e0;
		constexpr auto OnHolstered = 0x5a4840;
		constexpr auto OnViewmodelEvent = 0x2f4e50;
		constexpr auto OnReliableEvent = 0x2f4e50;
		constexpr auto ModifyCamera = 0x2f4e50;
		constexpr auto ShouldDestroyImmediately = 0x2f6b40;
		constexpr auto UpdatePlayerModel = 0x5a5bd0;
		constexpr auto ProcessPlayerModel = 0x2f4e50;
		constexpr auto GetHoldAnimations = 0x5a4160;
		constexpr auto GetMovementMultiplier = 0x2fc560;
		constexpr auto OnSpawnedForWorkshopPreview = 0x2f4e50;
		constexpr auto HeldEntityBlocksMovement = 0x2f4010;
		constexpr auto get_hostile = 0x5a5d80;
		constexpr auto LightsOn = 0x2face0;
		constexpr auto IsDeployed = 0x5a4430;
		constexpr auto GetOwnerPlayer = 0x5a4370;
		constexpr auto GetOwnerConnection = 0x5a4180;
		constexpr auto CanBeUsedInWater = 0x2f4010;
		constexpr auto BlocksGestures = 0x2f4010;
		constexpr auto GetOwnerItem = 0x5a4290;
		constexpr auto GetItem = 0x5a4170;
		constexpr auto GetOwnerItemDefinition = 0x5a4210;
		constexpr auto IsInstrument = 0x2f4010;
		constexpr auto Load = 0x5a4440;
		constexpr auto ctor = 0x5a5c90;
		constexpr auto cctor = 0x5a5c50;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x18dab40;
		constexpr auto set_text = 0x5b74f0;
		constexpr auto set_image = 0x47abb0;
		constexpr auto get_tooltip = 0x1a34950;
		constexpr auto set_tooltip = 0x2fe110;
		constexpr auto ctor = 0x1a348c0;
		constexpr auto Temp = 0x1a341a0;
		constexpr auto ClearStaticCache = 0x1a34040;
		constexpr auto cctor = 0x1a34470;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x160;
		constexpr auto skeletonProperties = 0x1b8;
		constexpr auto baseProtection = 0x1c0;
		constexpr auto startHealth = 0x1c8;
		constexpr auto pickup = 0x1d0;
		constexpr auto repair = 0x1f0;
		constexpr auto ShowHealthInfo = 0x218;
		constexpr auto lifestate = 0x21c;
		constexpr auto sendsHitNotification = 0x220;
		constexpr auto sendsMeleeHitNotification = 0x221;
		constexpr auto markAttackerHostile = 0x222;
		constexpr auto _health = 0x224;
		constexpr auto _maxHealth = 0x228;
		constexpr auto faction = 0x22c;
		constexpr auto deathTime = 0x230;
		constexpr auto lastNotifyFrame = 0x234;

		constexpr auto GetMenuOptions = 0x77fab0;
		constexpr auto get_HasMenuOptions = 0x780b00;
		constexpr auto OnRpcMessage = 0x7801c0;
		constexpr auto HitNotify = 0x77fe10;
		constexpr auto ClientInit = 0x77f530;
		constexpr auto DisplayHealthInfo = 0x6c5c30;
		constexpr auto GetEyeTransform = 0x77f990;
		constexpr auto OnLifeStateChanged = 0x780190;
		constexpr auto GetPickupCount = 0x77fdf0;
		constexpr auto CanPickup = 0x77f490;
		constexpr auto OnPickedUp = 0x2f4e50;
		constexpr auto Menu_Pickup = 0x780060;
		constexpr auto Menu_Pickup_TimeStart = 0x780010;
		constexpr auto Menu_Pickup_If = 0x77fff0;
		constexpr auto BuildCost = 0x77f3c0;
		constexpr auto IsDead = 0x77ff30;
		constexpr auto IsAlive = 0x77ff20;
		constexpr auto GetFaction = 0x77faa0;
		constexpr auto IsFriendly = 0x2f4010;
		constexpr auto get_SecondsSinceDeath = 0x780bc0;
		constexpr auto get_healthFraction = 0x780be0;
		constexpr auto ResetState = 0x780780;
		constexpr auto DestroyShared = 0x77f610;
		constexpr auto GetThreatLevel = 0x2fc2f0;
		constexpr auto PenetrationResistance = 0x7806f0;
		constexpr auto ScaleDamage = 0x780880;
		constexpr auto SkeletonLookup = 0x7809c0;
		constexpr auto Load = 0x77ff40;
		constexpr auto get_health = 0x77fe00;
		constexpr auto set_health = 0x780c30;
		constexpr auto Health = 0x77fe00;
		constexpr auto MaxHealth = 0x77ffe0;
		constexpr auto StartHealth = 0x4b56b0;
		constexpr auto StartMaxHealth = 0x780a70;
		constexpr auto SetMaxHealth = 0x780930;
		constexpr auto DoHitNotify = 0x77f630;
		constexpr auto OnAttacked = 0x7800a0;
		constexpr auto ctor = 0x780a90;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x904d60;
		constexpr auto WasDown = 0x904e30;
		constexpr auto WasJustPressed = 0x904e50;
		constexpr auto WasJustReleased = 0x904e90;
		constexpr auto SwallowButton = 0x904e20;
		constexpr auto AimAngle = 0x904ba0;
		constexpr auto MouseDelta = 0x904d90;
		constexpr auto Flip = 0x904c90;
		constexpr auto Clear = 0x904c60;
		constexpr auto ctor = 0x904ed0;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x1e7aac0;
		constexpr auto Dispose = 0x1e7a7c0;
		constexpr auto EnterPool = 0x1158180;
		constexpr auto LeavePool = 0x11581b0;
		constexpr auto CopyTo = 0x1e79820;
		constexpr auto Copy = 0x1e79860;
		constexpr auto Deserialize = 0x1e79ef0;
		constexpr auto DeserializeLengthDelimited = 0x1e79b80;
		constexpr auto DeserializeLength = 0x1e79c00;
		constexpr auto FromProto = 0x1e7a840;
		constexpr auto WriteToStream = 0x1e7b390;
		constexpr auto WriteToStreamDelta = 0x1e7b3b0;
		constexpr auto ReadFromStream = 0x1e7aa00;
		constexpr auto SerializeDelta = 0x1e7ab60;
		constexpr auto Serialize = 0x1e7b120;
		constexpr auto ToProtoBytes = 0x1e7b380;
		constexpr auto ToProto = 0x1e7b390;
		constexpr auto SerializeToBytes = 0x1e7b010;
		constexpr auto SerializeLengthDelimited = 0x1e7af60;
		constexpr auto ctor = 0xeb22b0;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x238;
		constexpr auto _mounted = 0x290;
		constexpr auto eyeOverride = 0x298;
		constexpr auto pitchClamp = 0x2a0;
		constexpr auto yawClamp = 0x2a8;
		constexpr auto canWieldItems = 0x2b0;
		constexpr auto relativeViewAngles = 0x2b1;
		constexpr auto mountAnchor = 0x2b8;
		constexpr auto mountPose = 0x2c0;
		constexpr auto maxMountDistance = 0x2c4;
		constexpr auto dismountPositions = 0x2c8;
		constexpr auto checkPlayerLosOnMount = 0x2d0;
		constexpr auto disableMeshCullingForPlayers = 0x2d1;
		constexpr auto unparentOnMount = 0x2d2;
		constexpr auto modifiesPlayerCollider = 0x2d3;
		constexpr auto customPlayerCollider = 0x2d4;
		constexpr auto mountSoundDef = 0x2e8;
		constexpr auto swapSoundDef = 0x2f0;
		constexpr auto dismountSoundDef = 0x2f8;
		constexpr auto mountTimeStatType = 0x300;
		constexpr auto allowedGestures = 0x304;
		constexpr auto canDrinkWhileMounted = 0x308;
		constexpr auto MountedCameraMode = 0x30c;
		constexpr auto isMobile = 0x310;
		constexpr auto SideLeanAmount = 0x314;

		constexpr auto GetMenuOptions = 0x2fbf60;
		constexpr auto get_HasMenuOptions = 0x2fdd00;
		constexpr auto OnRpcMessage = 0x2fcb40;
		constexpr auto CanHoldItems = 0x2fb7f0;
		constexpr auto GetMountedCameraMode = 0x2fc350;
		constexpr auto DirectlyMountable = 0x2f6b40;
		constexpr auto GetEyeOverride = 0x2fbed0;
		constexpr auto GetMountedBodyAngles = 0x2fc300;
		constexpr auto ModifiesThirdPersonCamera = 0x2f4010;
		constexpr auto GetPitchClamp = 0x2fc540;
		constexpr auto GetYawClamp = 0x2fc570;
		constexpr auto EyePositionForPlayer = 0x2fbb50;
		constexpr auto WaterFactorForPlayer = 0x2fdbb0;
		constexpr auto MaxVelocity = 0x2fc600;
		constexpr auto GetMounted = 0x2fc530;
		constexpr auto OnClientInput = 0x2f4e50;
		constexpr auto ForceUpdatePlayerModel = 0x2f4010;
		constexpr auto UpdatePlayerModel = 0x2fd5c0;
		constexpr auto ProcessPlayerModel = 0x2f4e50;
		constexpr auto SuppressHandsAnimationLayer = 0x2f4010;
		constexpr auto GetAnimationOverride = 0x2fbec0;
		constexpr auto GetSpineLookAtWeight = 0x2fc560;
		constexpr auto GetMountedAnimationSpeed = 0x2fc2f0;
		constexpr auto ModifyThirdPersonEyeOffset = 0x2fc7c0;
		constexpr auto LockThirdPersonOffset = 0x2fc590;
		constexpr auto VehicleParent = 0x2fdb20;
		constexpr auto get_IsSummerDlcVehicle = 0x2f4010;
		constexpr auto IsInstrument = 0x2f4010;
		constexpr auto UpdatePlayerRotation = 0x2fda70;
		constexpr auto SetNetworkPosition = 0x2fd590;
		constexpr auto UpdatePlayerPosition = 0x2fd8e0;
		constexpr auto GetMountedRotation = 0x2fc420;
		constexpr auto GetMountedPosition = 0x2fc360;
		constexpr auto PlayerMounted = 0x2fd150;
		constexpr auto PlayerDismounted = 0x2fcc60;
		constexpr auto ClientOnPlayerDismounted = 0x2fb800;
		constexpr auto ClientOnPlayerMounted = 0x2fb8a0;
		constexpr auto OverrideViewAngles = 0x2fcc30;
		constexpr auto DoPlayerMovement = 0x2fba80;
		constexpr auto ClientRequestDismount = 0x2fb970;
		constexpr auto Menu_Mount = 0x2fc750;
		constexpr auto Menu_Mount_ShowIf = 0x2fc6b0;
		constexpr auto MountMenuVisible = 0x2f6b40;
		constexpr auto NearMountPoint = 0x2fc7e0;
		constexpr auto ConvertVector = 0x2fb9b0;
		constexpr auto get_BlocksDoors = 0x2f6b40;
		constexpr auto ctor = 0x2fdc50;
	};

	namespace TOD_Sky {
		constexpr auto probeRenderID = 0x18;
		constexpr auto ColorSpace = 0x1c;
		constexpr auto ColorRange = 0x20;
		constexpr auto ColorOutput = 0x24;
		constexpr auto SkyQuality = 0x28;
		constexpr auto CloudQuality = 0x2c;
		constexpr auto MeshQuality = 0x30;
		constexpr auto StarQuality = 0x34;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto Probek__BackingField = 0x218;
		constexpr auto ProbeInstancek__BackingField = 0x220;
		constexpr auto ProbeExk__BackingField = 0x228;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0x1233ee0;
		constexpr auto get_Instance = 0x1233e10;
		constexpr auto get_Initialized = 0xc27530;
		constexpr auto set_Initialized = 0xc27540;
		constexpr auto get_Headless = 0x1233df0;
		constexpr auto get_Components = 0xa56e80;
		constexpr auto set_Components = 0xbd7920;
		constexpr auto get_Resources = 0x7a5680;
		constexpr auto set_Resources = 0xfe5c80;
		constexpr auto get_IsDay = 0x1233f40;
		constexpr auto set_IsDay = 0x12342e0;
		constexpr auto get_IsNight = 0x1233f50;
		constexpr auto set_IsNight = 0x12342f0;
		constexpr auto get_Radius = 0x12341c0;
		constexpr auto get_Diameter = 0x1233d90;
		constexpr auto get_LerpValue = 0x6195c0;
		constexpr auto set_LerpValue = 0x6197c0;
		constexpr auto get_SunZenith = 0x1234280;
		constexpr auto set_SunZenith = 0x1234500;
		constexpr auto get_SunAltitude = 0x1234200;
		constexpr auto set_SunAltitude = 0x1234460;
		constexpr auto get_SunAzimuth = 0x1234210;
		constexpr auto set_SunAzimuth = 0x1234470;
		constexpr auto get_MoonZenith = 0x1234180;
		constexpr auto set_MoonZenith = 0x1234430;
		constexpr auto get_MoonAltitude = 0x12340e0;
		constexpr auto set_MoonAltitude = 0x1234380;
		constexpr auto get_MoonAzimuth = 0x12340f0;
		constexpr auto set_MoonAzimuth = 0x1234390;
		constexpr auto get_SunsetTime = 0x12342a0;
		constexpr auto set_SunsetTime = 0x1234520;
		constexpr auto get_SunriseTime = 0x1234290;
		constexpr auto set_SunriseTime = 0x1234510;
		constexpr auto get_LocalSiderealTime = 0x1079660;
		constexpr auto set_LocalSiderealTime = 0x1079e60;
		constexpr auto get_LightZenith = 0x1234000;
		constexpr auto get_LightIntensity = 0x1233fd0;
		constexpr auto get_SunVisibility = 0x1234270;
		constexpr auto set_SunVisibility = 0x12344f0;
		constexpr auto get_MoonVisibility = 0x10794b0;
		constexpr auto set_MoonVisibility = 0x1234420;
		constexpr auto get_SunDirection = 0x1234220;
		constexpr auto set_SunDirection = 0x1234490;
		constexpr auto get_MoonDirection = 0x1234110;
		constexpr auto set_MoonDirection = 0x12343b0;
		constexpr auto get_LightDirection = 0x1233fb0;
		constexpr auto set_LightDirection = 0x1234300;
		constexpr auto get_LocalSunDirection = 0x12340c0;
		constexpr auto set_LocalSunDirection = 0x1234360;
		constexpr auto get_LocalMoonDirection = 0x12340a0;
		constexpr auto set_LocalMoonDirection = 0x1234340;
		constexpr auto get_LocalLightDirection = 0x1234080;
		constexpr auto set_LocalLightDirection = 0x1234320;
		constexpr auto get_SunLightColor = 0x1234240;
		constexpr auto set_SunLightColor = 0x12344b0;
		constexpr auto get_MoonLightColor = 0x1234140;
		constexpr auto set_MoonLightColor = 0x12343e0;
		constexpr auto get_LightColor = 0x1233f60;
		constexpr auto get_SunRayColor = 0x1234260;
		constexpr auto set_SunRayColor = 0x12344d0;
		constexpr auto get_MoonRayColor = 0x1234160;
		constexpr auto set_MoonRayColor = 0x1234400;
		constexpr auto get_SunSkyColor = 0xdeaad0;
		constexpr auto set_SunSkyColor = 0x12344e0;
		constexpr auto get_MoonSkyColor = 0x1234170;
		constexpr auto set_MoonSkyColor = 0x1234410;
		constexpr auto get_SunMeshColor = 0x1234250;
		constexpr auto set_SunMeshColor = 0x12344c0;
		constexpr auto get_MoonMeshColor = 0x1234150;
		constexpr auto set_MoonMeshColor = 0x12343f0;
		constexpr auto get_SunCloudColor = 0xbe6ff0;
		constexpr auto set_SunCloudColor = 0x1234480;
		constexpr auto get_MoonCloudColor = 0x1234100;
		constexpr auto set_MoonCloudColor = 0x12343a0;
		constexpr auto get_FogColor = 0x1233dd0;
		constexpr auto set_FogColor = 0x12342c0;
		constexpr auto get_GroundColor = 0x1233de0;
		constexpr auto set_GroundColor = 0x12342d0;
		constexpr auto get_AmbientColor = 0x1233d80;
		constexpr auto set_AmbientColor = 0x12342b0;
		constexpr auto get_MoonHaloColor = 0x1234130;
		constexpr auto set_MoonHaloColor = 0x12343d0;
		constexpr auto get_Probe = 0x12341b0;
		constexpr auto set_Probe = 0x1234450;
		constexpr auto get_ProbeInstance = 0x12341a0;
		constexpr auto set_ProbeInstance = 0xaffb80;
		constexpr auto get_ProbeEx = 0x1234190;
		constexpr auto set_ProbeEx = 0x1234440;
		constexpr auto OrbitalToUnity = 0x122c2d0;
		constexpr auto OrbitalToLocal = 0x122c210;
		constexpr auto SampleAtmosphere = 0x122d9e0;
		constexpr auto RenderToSphericalHarmonics = 0x122d880;
		constexpr auto RenderToCubemap = 0x122c3a0;
		constexpr auto RenderToProbe = 0x122c560;
		constexpr auto UpdateProbeProperties = 0x1231ee0;
		constexpr auto SampleFogColor = 0x122dd60;
		constexpr auto SampleSkyColor = 0x122e010;
		constexpr auto SampleEquatorColor = 0x122dca0;
		constexpr auto UpdateFog = 0x1231e60;
		constexpr auto UpdateAmbient = 0x122f530;
		constexpr auto UpdateReflection = 0x12328a0;
		constexpr auto LoadParameters = 0x122bf70;
		constexpr auto SaveParameters = 0x122e120;
		constexpr auto UpdateQualitySettings = 0x1232290;
		constexpr auto UpdateRenderSettings = 0x12329a0;
		constexpr auto UpdateShaderKeywords = 0x1232d50;
		constexpr auto UpdateShaderProperties = 0x1232f50;
		constexpr auto ShaderScale = 0x122e690;
		constexpr auto ShaderMiePhase = 0x122e370;
		constexpr auto ShaderRayleighPhase = 0x122e670;
		constexpr auto ShaderNightSkyColor = 0x122e580;
		constexpr auto ShaderMoonHaloColor = 0x122e440;
		constexpr auto TOD_HDR2LDR = 0x122f2e0;
		constexpr auto TOD_GAMMA2LINEAR = 0x122f280;
		constexpr auto TOD_LINEAR2GAMMA = 0x122f460;
		constexpr auto ShaderScatteringColor = 0x122e740;
		constexpr auto Initialize = 0x122bb90;
		constexpr auto Cleanup = 0x122ba20;
		constexpr auto OnEnable = 0x122c1c0;
		constexpr auto OnDisable = 0x122ba20;
		constexpr auto LateUpdate = 0x122bc90;
		constexpr auto OnValidate = 0x122c1d0;
		constexpr auto UpdateScattering = 0x1232ba0;
		constexpr auto UpdateCelestials = 0x122fca0;
		constexpr auto ctor = 0x1233d30;
		constexpr auto cctor = 0x1233cd0;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x18f0660;
		constexpr auto get_state = 0x18f0930;
		constexpr auto set_state = 0x18f09e0;
		constexpr auto Range = 0x18f06e0;
		constexpr auto RandomRangeInt = 0x18f06a0;
		constexpr auto get_value = 0x18f0970;
		constexpr auto get_insideUnitSphere = 0x18f07b0;
		constexpr auto GetRandomUnitCircle = 0x18f0620;
		constexpr auto get_insideUnitCircle = 0x18f0730;
		constexpr auto get_onUnitSphere = 0x18f0830;
		constexpr auto get_rotation = 0x18f08b0;
		constexpr auto RandomRange = 0x18f06a0;
		constexpr auto get_state_Injected = 0x18f08f0;
		constexpr auto set_state_Injected = 0x18f09a0;
		constexpr auto get_insideUnitSphere_Injected = 0x18f0770;
		constexpr auto get_onUnitSphere_Injected = 0x18f07f0;
		constexpr auto get_rotation_Injected = 0x18f0870;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x234160;
		constexpr auto GetHashCode = 0x13a460;
		constexpr auto Equals = 0x233c20;
		constexpr auto Raycast = 0x233ef0;
		constexpr auto Internal_RaycastTest = 0x2263600;
		constexpr auto Internal_Raycast = 0x22636e0;
		constexpr auto Internal_RaycastNonAlloc = 0x2263520;
		constexpr auto Query_CapsuleCast = 0x2263e10;
		constexpr auto Internal_CapsuleCast = 0x2263300;
		constexpr auto CapsuleCast = 0x233b70;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x2263b30;
		constexpr auto OverlapCapsule = 0x233d50;
		constexpr auto Query_SphereCast = 0x2263f20;
		constexpr auto Internal_SphereCast = 0x2263850;
		constexpr auto SphereCast = 0x233fe0;
		constexpr auto Internal_SphereCastNonAlloc = 0x22637c0;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x2263c20;
		constexpr auto OverlapSphere = 0x233df0;
		constexpr auto Query_BoxCast = 0x2263d00;
		constexpr auto Internal_BoxCast = 0x2263140;
		constexpr auto BoxCast = 0x233ab0;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x2263a40;
		constexpr auto OverlapBox = 0x233ca0;
		constexpr auto Internal_RaycastTest_Injected = 0x2263590;
		constexpr auto Internal_Raycast_Injected = 0x2263670;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x22634b0;
		constexpr auto Query_CapsuleCast_Injected = 0x2263da0;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x2263ac0;
		constexpr auto Query_SphereCast_Injected = 0x2263eb0;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x2263750;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x2263bb0;
		constexpr auto Query_BoxCast_Injected = 0x2263c90;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x22639d0;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0x58b480;
		constexpr auto IsOnLayer = 0x58b330;
		constexpr auto GetEntityFromRegistry = 0x58b200;
		constexpr auto GetEntityFromComponent = 0x58b100;
		constexpr auto SetHierarchyGroup = 0x58b3c0;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x238;
		constexpr auto rotorPivot = 0x240;
		constexpr auto mainRotor = 0x248;
		constexpr auto mainRotor_blades = 0x250;
		constexpr auto mainRotor_blur = 0x258;
		constexpr auto tailRotor = 0x260;
		constexpr auto tailRotor_blades = 0x268;
		constexpr auto tailRotor_blur = 0x270;
		constexpr auto rocket_tube_left = 0x278;
		constexpr auto rocket_tube_right = 0x280;
		constexpr auto left_gun_yaw = 0x288;
		constexpr auto left_gun_pitch = 0x290;
		constexpr auto left_gun_muzzle = 0x298;
		constexpr auto right_gun_yaw = 0x2a0;
		constexpr auto right_gun_pitch = 0x2a8;
		constexpr auto right_gun_muzzle = 0x2b0;
		constexpr auto spotlight_rotation = 0x2b8;
		constexpr auto rocket_fire_effect = 0x2c0;
		constexpr auto gun_fire_effect = 0x2c8;
		constexpr auto bulletEffect = 0x2d0;
		constexpr auto explosionEffect = 0x2d8;
		constexpr auto fireBall = 0x2e0;
		constexpr auto crateToDrop = 0x2e8;
		constexpr auto maxCratesToSpawn = 0x2f0;
		constexpr auto bulletSpeed = 0x2f4;
		constexpr auto bulletDamage = 0x2f8;
		constexpr auto servergibs = 0x300;
		constexpr auto debrisFieldMarker = 0x308;
		constexpr auto rotorWashSoundDef = 0x310;
		constexpr auto _rotorWashSound = 0x318;
		constexpr auto flightEngineSoundDef = 0x320;
		constexpr auto flightThwopsSoundDef = 0x328;
		constexpr auto flightEngineSound = 0x330;
		constexpr auto flightThwopsSound = 0x338;
		constexpr auto flightEngineGainMod = 0x340;
		constexpr auto flightThwopsGainMod = 0x348;
		constexpr auto rotorGainModSmoothing = 0x350;
		constexpr auto engineGainMin = 0x354;
		constexpr auto engineGainMax = 0x358;
		constexpr auto thwopGainMin = 0x35c;
		constexpr auto thwopGainMax = 0x360;
		constexpr auto spotlightJitterAmount = 0x364;
		constexpr auto spotlightJitterSpeed = 0x368;
		constexpr auto nightLights = 0x370;
		constexpr auto spotlightTarget = 0x378;
		constexpr auto engineSpeed = 0x384;
		constexpr auto targetEngineSpeed = 0x388;
		constexpr auto blur_rotationScale = 0x38c;
		constexpr auto _rotorWashParticles = 0x390;
		constexpr auto myAI = 0x398;
		constexpr auto client_rotorPivotIdeal = 0x3a0;
		constexpr auto nightLightsOn = 0x3b0;

		constexpr auto OnRpcMessage = 0x799920;
		constexpr auto InitalizeWeakspots = 0x799410;
		constexpr auto MaxVelocity = 0x31d530;
		constexpr auto InitShared = 0x799380;
		constexpr auto Load = 0x7996f0;
		constexpr auto ClientInit = 0x798d80;
		constexpr auto InitializeClientsideEffects = 0x799490;
		constexpr auto DoClientDestroy = 0x798dc0;
		constexpr auto SetLights = 0x799d70;
		constexpr auto Update = 0x79a7f0;
		constexpr auto UpdateEffects = 0x799e90;
		constexpr auto UpdateRotorWashPosition = 0x79a6b0;
		constexpr auto ToggleRotorWash = 0x799e10;
		constexpr auto UpdateRotorVisibility = 0x79a620;
		constexpr auto FireGun = 0x798ea0;
		constexpr auto ctor = 0x79af80;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileDistance = 0xa0;
		constexpr auto ProjectileVelocity = 0xa4;
		constexpr auto ProjectilePrefab = 0xb0;
		constexpr auto material = 0xb8;
		constexpr auto damageProperties = 0xc0;
		constexpr auto damageTypes = 0xc8;
		constexpr auto CanGather = 0xd0;
		constexpr auto DidGather = 0xd1;
		constexpr auto gatherScale = 0xd4;

		constexpr auto IsProjectile = 0x5a8300;
		constexpr auto get_InitiatorPlayer = 0x5a8b50;
		constexpr auto get_attackNormal = 0x5a8be0;
		constexpr auto get_hasDamage = 0x5a90e0;
		constexpr auto ctor = 0x5a8970;
		constexpr auto LoadFromAttack = 0x5a8310;
		constexpr auto get_isHeadshot = 0x5a9110;
		constexpr auto get_bonePhrase = 0x5a8f80;
		constexpr auto get_boneName = 0x5a8df0;
		constexpr auto get_boneArea = 0x5a8ce0;
		constexpr auto PositionOnRay = 0x5a8510;
		constexpr auto HitPositionOnRay = 0x5a8160;
		constexpr auto IsNaNOrInfinity = 0x5a81b0;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x169b7b0;
		constexpr auto NumberBufferToDouble = 0x169b7c0;
		constexpr auto FormatDecimal = 0x169acd0;
		constexpr auto FormatDouble = 0x169adf0;
		constexpr auto FormatInt32 = 0x169ae70;
		constexpr auto FormatUInt32 = 0x169b1d0;
		constexpr auto FormatInt64 = 0x169afe0;
		constexpr auto FormatUInt64 = 0x169b330;
		constexpr auto FormatSingle = 0x169b150;
		constexpr auto HexNumberToInt32 = 0x169b490;
		constexpr auto HexNumberToInt64 = 0x169b510;
		constexpr auto HexNumberToUInt32 = 0x169b5d0;
		constexpr auto HexNumberToUInt64 = 0x169b650;
		constexpr auto IsWhite = 0x169b6e0;
		constexpr auto NumberToInt32 = 0x169b7d0;
		constexpr auto NumberToInt64 = 0x169b830;
		constexpr auto NumberToUInt32 = 0x169b8b0;
		constexpr auto NumberToUInt64 = 0x169b910;
		constexpr auto MatchChars = 0x169b740;
		constexpr auto ParseDecimal = 0x169b980;
		constexpr auto ParseDouble = 0x169baf0;
		constexpr auto ParseInt32 = 0x169bda0;
		constexpr auto ParseInt64 = 0x169bff0;
		constexpr auto ParseNumber = 0x169c260;
		constexpr auto ParseSingle = 0x169cd50;
		constexpr auto ParseUInt32 = 0x169d070;
		constexpr auto ParseUInt64 = 0x169d2b0;
		constexpr auto StringToNumber = 0x169d510;
		constexpr auto TrailingZeros = 0x169d650;
		constexpr auto TryParseDecimal = 0x169d6b0;
		constexpr auto TryParseDouble = 0x169d830;
		constexpr auto TryParseInt32 = 0x169d9b0;
		constexpr auto TryParseInt64 = 0x169dbf0;
		constexpr auto TryParseSingle = 0x169ddc0;
		constexpr auto TryParseUInt32 = 0x169df70;
		constexpr auto TryParseUInt64 = 0x169e1b0;
		constexpr auto TryStringToNumber = 0x169e4d0;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x13202c0;
		constexpr auto OnSerializing = 0x131f920;
		constexpr auto OnDeserializing = 0x2f4e50;
		constexpr auto OnDeserialized = 0x2f4e50;
		constexpr auto get_InvariantInfo = 0x1320450;
		constexpr auto GetInstance = 0x131f6a0;
		constexpr auto Clone = 0x131f5a0;
		constexpr auto get_CurrencyDecimalDigits = 0x96fb00;
		constexpr auto get_CurrencyDecimalSeparator = 0x4699b0;
		constexpr auto get_IsReadOnly = 0xce4c00;
		constexpr auto get_CurrencyGroupSizes = 0x13202d0;
		constexpr auto get_NumberGroupSizes = 0x1320560;
		constexpr auto get_PercentGroupSizes = 0x13205e0;
		constexpr auto get_CurrencyGroupSeparator = 0x6196b0;
		constexpr auto get_CurrencySymbol = 0x4bba90;
		constexpr auto get_CurrentInfo = 0x1320350;
		constexpr auto get_NaNSymbol = 0x4416f0;
		constexpr auto get_CurrencyNegativePattern = 0x10ebc00;
		constexpr auto get_NumberNegativePattern = 0x10ebbf0;
		constexpr auto get_PercentPositivePattern = 0x10ebbe0;
		constexpr auto get_PercentNegativePattern = 0x932c20;
		constexpr auto get_NegativeInfinitySymbol = 0x4a6dc0;
		constexpr auto get_NegativeSign = 0x43aa00;
		constexpr auto get_NumberDecimalDigits = 0xedd960;
		constexpr auto get_NumberDecimalSeparator = 0x619600;
		constexpr auto get_NumberGroupSeparator = 0x6196a0;
		constexpr auto get_CurrencyPositivePattern = 0x2fe430;
		constexpr auto get_PositiveInfinitySymbol = 0x4a6dd0;
		constexpr auto get_PositiveSign = 0x6e0a40;
		constexpr auto get_PercentDecimalDigits = 0x932c40;
		constexpr auto get_PercentDecimalSeparator = 0x2fe4c0;
		constexpr auto get_PercentGroupSeparator = 0x2fe400;
		constexpr auto get_PercentSymbol = 0x4a6d70;
		constexpr auto get_PerMilleSymbol = 0x2fe410;
		constexpr auto GetFormat = 0x131f610;
		constexpr auto ReadOnly = 0x131f9b0;
		constexpr auto ValidateParseStyleInteger = 0x131fb30;
		constexpr auto ValidateParseStyleFloatingPoint = 0x131fa60;
	};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x191d590;
		constexpr auto Vertex = 0x191d5f0;
		constexpr auto TexCoord3 = 0x191d530;
		constexpr auto TexCoord2 = 0x191d4e0;
		constexpr auto MultiTexCoord3 = 0x191d410;
		constexpr auto MultiTexCoord2 = 0x191d3b0;
		constexpr auto ImmediateColor = 0x191d0f0;
		constexpr auto Color = 0x191cdc0;
		constexpr auto get_sRGBWrite = 0x191d650;
		constexpr auto set_sRGBWrite = 0x191d680;
		constexpr auto Flush = 0x191ce50;
		constexpr auto MultMatrix = 0x191d370;
		constexpr auto PushMatrix = 0x191d4b0;
		constexpr auto PopMatrix = 0x191d480;
		constexpr auto LoadIdentity = 0x191d220;
		constexpr auto LoadOrtho = 0x191d250;
		constexpr auto LoadPixelMatrix = 0x191d280;
		constexpr auto LoadProjectionMatrix = 0x191d2f0;
		constexpr auto GetGPUProjectionMatrix = 0x191d080;
		constexpr auto GLLoadPixelMatrixScript = 0x191cfa0;
		constexpr auto GLIssuePluginEvent = 0x191cf60;
		constexpr auto IssuePluginEvent = 0x191d170;
		constexpr auto Begin = 0x191ccd0;
		constexpr auto End = 0x191ce20;
		constexpr auto GLClear = 0x191cef0;
		constexpr auto Clear = 0x191cd60;
		constexpr auto ClearWithSkybox = 0x191cd10;
		constexpr auto MultMatrix_Injected = 0x191d330;
		constexpr auto LoadProjectionMatrix_Injected = 0x191d2b0;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x191d020;
		constexpr auto GLClear_Injected = 0x191ce80;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x18dd590;
		constexpr auto CreateWithMaterial = 0x18dd540;
		constexpr auto CreateWithString = 0x18dd5e0;
		constexpr auto ctor = 0x18deb40;
		constexpr auto get_shader = 0x18dee00;
		constexpr auto set_shader = 0x18def90;
		constexpr auto get_color = 0x18debd0;
		constexpr auto set_color = 0x18dee40;
		constexpr auto get_mainTexture = 0x18dece0;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x18dd8b0;
		constexpr auto HasProperty = 0x18dddc0;
		constexpr auto get_renderQueue = 0x18dedc0;
		constexpr auto set_renderQueue = 0x18def50;
		constexpr auto EnableKeyword = 0x18dd670;
		constexpr auto DisableKeyword = 0x18dd620;
		constexpr auto IsKeywordEnabled = 0x18dde00;
		constexpr auto get_enableInstancing = 0x18deca0;
		constexpr auto set_enableInstancing = 0x18def00;
		constexpr auto get_passCount = 0x18ded80;
		constexpr auto GetShaderPassEnabled = 0x18dda00;
		constexpr auto GetPassName = 0x18dd980;
		constexpr auto FindPass = 0x18dd6c0;
		constexpr auto SetOverrideTag = 0x18de590;
		constexpr auto GetTagImpl = 0x18dda50;
		constexpr auto GetTag = 0x18ddb50;
		constexpr auto SetPass = 0x18de5f0;
		constexpr auto CopyPropertiesFromMaterial = 0x18dd4f0;
		constexpr auto GetShaderKeywords = 0x18dd9c0;
		constexpr auto SetShaderKeywords = 0x18de630;
		constexpr auto get_shaderKeywords = 0x18dd9c0;
		constexpr auto set_shaderKeywords = 0x18de630;
		constexpr auto SetFloatImpl = 0x18de2e0;
		constexpr auto SetColorImpl = 0x18ddf50;
		constexpr auto SetMatrixImpl = 0x18de450;
		constexpr auto SetTextureImpl = 0x18de680;
		constexpr auto SetBufferImpl = 0x18dde50;
		constexpr auto GetFloatImpl = 0x18dd8f0;
		constexpr auto GetColorImpl = 0x18dd760;
		constexpr auto GetTextureImpl = 0x18ddbc0;
		constexpr auto SetFloatArrayImpl = 0x18de050;
		constexpr auto SetTextureOffsetImpl = 0x18de720;
		constexpr auto SetTextureScaleImpl = 0x18de820;
		constexpr auto SetFloatArray = 0x18de1b0;
		constexpr auto SetFloat = 0x18de330;
		constexpr auto SetInt = 0x18de390;
		constexpr auto SetColor = 0x18ddff0;
		constexpr auto SetVector = 0x18de930;
		constexpr auto SetMatrix = 0x18de510;
		constexpr auto SetTexture = 0x18de8d0;
		constexpr auto SetBuffer = 0x18ddea0;
		constexpr auto GetFloat = 0x18dd930;
		constexpr auto GetColor = 0x18dd830;
		constexpr auto GetVector = 0x18ddc50;
		constexpr auto GetTexture = 0x18ddc00;
		constexpr auto SetTextureOffset = 0x18de770;
		constexpr auto SetTextureScale = 0x18de870;
		constexpr auto SetColorImpl_Injected = 0x18ddf00;
		constexpr auto SetMatrixImpl_Injected = 0x18de400;
		constexpr auto GetColorImpl_Injected = 0x18dd710;
		constexpr auto SetTextureOffsetImpl_Injected = 0x18de6d0;
		constexpr auto SetTextureScaleImpl_Injected = 0x18de7d0;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x19bc450;
		constexpr auto get_height = 0x19bc3f0;
		constexpr auto get_dpi = 0x19bc390;
		constexpr auto get_currentResolution = 0x19bc350;
		constexpr auto get_fullScreen = 0x19bc3c0;
		constexpr auto SetResolution = 0x19bc250;
		constexpr auto get_resolutions = 0x19bc420;
		constexpr auto get_currentResolution_Injected = 0x19bc310;
	};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0x10e6560;
	};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0x10ea430;
	};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0x10e79f0;
	};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0x10ea470;
	};

}
